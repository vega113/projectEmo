# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# Home page
GET            /                                                                                controllers.FrontendController.index

# Login
POST           /api/login                                                                       controllers.LoginController.login
POST           /api/logout                                                                      controllers.LoginController.logout

# EmotionRecordWithRelations routes
POST           /api/emotionRecord                                                               controllers.EmotionRecordController.insert()
DELETE         /api/emotionRecord/:id                                                           controllers.EmotionRecordController.delete(id: Long)
PUT            /api/emotionRecord                                                               controllers.EmotionRecordController.update()
POST           /api/emotionRecord/:id/note                                                      controllers.EmotionRecordController.insertNote(id: Long)
GET            /api/emotionRecord/user                                                          controllers.EmotionRecordController.findAllByUserId()
GET            /api/emotionRecord/user/days                                                     controllers.EmotionRecordController.findAllDaysByUserId()
GET            /api/emotionRecord/user/month/:monthStart/:monthEnd                              controllers.EmotionRecordController.findRecordsByUserIdForMonth(monthStart: String, monthEnd: String)
GET            /api/emotionRecord/day/user/month/:monthStart/:monthEnd                          controllers.EmotionRecordController.findRecordsByDayByUserIdForMonth(monthStart: String, monthEnd)
GET            /api/charts/user/month/:monthStart/:monthEnd                                     controllers.EmotionRecordController.findAllByUserIdAndDateRangeForSunburstChart(monthStart: String, monthEnd)
GET            /api/charts/user/doughnut/emotionTypesTrigger/month/:monthStart/:monthEnd        controllers.EmotionRecordController.findAllByUserIdAndDateRangeForDoughnutEmotionTypeTriggersChart(monthStart: String, monthEnd)
DELETE         /api/note/tag/:id                                                                controllers.EmotionRecordController.deleteTag(id: Long)
POST           /api/note/tag                                                                    controllers.EmotionRecordController.addTag

GET            /api/emotion                                                                     controllers.EmotionController.findAll()
GET            /api/trigger                                                                     controllers.TriggerController.findAll()
GET            /api/emotion/:id/subEmotions                                                     controllers.SubEmotionController.findAllByEmotionId(id: String)
GET            /api/noteTemplate                                                                controllers.NoteController.fetchNoteTemplate()

# Note routes
PUT            /api/note/delete/:id                                                             controllers.NoteController.deleteNote(id: Long)
POST           /api/note/emotion/detect                                                         controllers.NoteController.detectEmotion
PUT            /api/note/todo/accept/:noteTodoId                                                controllers.NoteController.acceptTodo(noteTodoId: Long)

# User Todo routes
GET            /api/user/todo/:page/:size                                                       controllers.UserTodoController.fetchUserTodos(page: Int, size: Int)
PUT            /api/user/todo/complete/:userTodoId/:isDone                                      controllers.UserTodoController.complete(userTodoId: Long, isDone: Boolean)
PUT            /api/user/todo/archive/:userTodoId/:isArchived                                   controllers.UserTodoController.archive(userTodoId: Long, isArchived: Boolean)
POST           /api/user/todo                                                                   controllers.UserTodoController.add()
PUT            /api/user/todo                                                                   controllers.UserTodoController.edit()
DELETE         /api/user/todo/:userTodoId                                                       controllers.UserTodoController.delete(userTodoId: Long)

# Transcription routes
POST           /api/transcribe                                                                  controllers.TranscriberController.transcribeAudioToText()

# AI Admin routes
POST           /api/ai/admin/assistant                                                          controllers.AiAdminController.createAssistant()
DELETE         /api/ai/admin/assistant/:externalId                                              controllers.AiAdminController.deleteAssistantByExternal(externalId)

# User routes

POST           /api/user                                                                        controllers.UserController.createUser()

# version
GET            /api/version                                                                     controllers.VersionController.version

# Emotion cache routes

GET            /api/emotionCache                                                                controllers.EmotionDataController.fetchEmotionData()

GET            /api/healthcheck                                                                 controllers.HealthcheckController.healthcheck()

# Serve static assets under public directory
GET            /*file                                                                           controllers.FrontendController.assetOrDefault(file)

OPTIONS        /*all                                                                            controllers.DefaultController.defaultOptions(all: String)




