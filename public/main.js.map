{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/adapters/date-fns.adapter.ts","./src/app/add-todo-dialog/add-todo-dialog.component.ts","./src/app/add-todo-dialog/add-todo-dialog.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/create-emotion/create-emotion.component.ts","./src/app/create-emotion/create-emotion.component.html","./src/app/custom-date-picker/custom-date-picker.component.ts","./src/app/custom-date-picker/custom-date-picker.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/day-info-dialog/day-info-dialog.component.ts","./src/app/day-info-dialog/day-info-dialog.component.html","./src/app/day/day.component.ts","./src/app/day/day.component.html","./src/app/directives/screenSize.directive.ts","./src/app/display-emotion/display-emotion.component.ts","./src/app/display-emotion/display-emotion.component.html","./src/app/emotion-analyzer/emotion-analyzer.component.ts","./src/app/emotion-analyzer/emotion-analyzer.component.html","./src/app/emotion-calendar/emotion-calendar.component.ts","./src/app/emotion-calendar/emotion-calendar.component.html","./src/app/emotions-timeline/emotions-timeline.component.ts","./src/app/emotions-timeline/emotions-timeline.component.html","./src/app/landing-page/landing-page.component.ts","./src/app/landing-page/landing-page.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main-layout/main-layout.component.ts","./src/app/main-layout/main-layout.component.html","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/note-form/note-form.component.ts","./src/app/note-form/note-form.component.html","./src/app/note-todo/note-todo.component.ts","./src/app/note-todo/note-todo.component.html","./src/app/services/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/color.service.ts","./src/app/services/date.service.ts","./src/app/services/emotion-cache.service.ts","./src/app/services/emotion-state.service.ts","./src/app/services/emotion.service.ts","./src/app/services/error.service.ts","./src/app/services/note-todo.service.ts","./src/app/services/note.service.ts","./src/app/services/user-todo.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/todo-tab/todo-tab.component.ts","./src/app/todo-tab/todo-tab.component.html","./src/app/user-todos/user-todos.component.ts","./src/app/user-todos/user-todos.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { DateAdapter } from '@angular/material/core';\nimport { format, getDay, getDate, getDaysInMonth, getMonth, getYear, isValid, isDate, addYears, addMonths, addDays, parseISO } from 'date-fns';\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\n\n@Injectable()\nexport class DateFnsAdapter extends DateAdapter<Date> {\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string) {\n    super();\n    this.setLocale(matDateLocale || 'en-US');\n  }\n\n  getYear(date: Date): number {\n    return getYear(date);\n  }\n\n  getMonth(date: Date): number {\n    return getMonth(date);\n  }\n\n  getDate(date: Date): number {\n    return getDate(date);\n  }\n\n  getDayOfWeek(date: Date): number {\n    return getDay(date);\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    // This method would need a locale aware implementation\n    // Not provided in date-fns\n    return ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  }\n\n  getDateNames(): string[] {\n    // This method would need a locale aware implementation\n    // Not provided in date-fns\n    return Array.from({length: 31}, (_, i) => String(i + 1));\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    // This method would need a locale aware implementation\n    // Not provided in date-fns\n    return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  }\n\n  getYearName(date: Date): string {\n    return this.getYear(date).toString();\n  }\n\n  getFirstDayOfWeek(): number {\n    // This method would need a locale aware implementation\n    // Not provided in date-fns\n    return 0; // Sunday\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return getDaysInMonth(date);\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    return new Date(year, month, date);\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any, parseFormat: any): Date | null {\n    return isDate(value) ? value : parseISO(value);\n  }\n\n  format(date: Date, displayFormat: any): string {\n    return format(date, displayFormat);\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return addYears(date, years);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    return addMonths(date, months);\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return addDays(date, days);\n  }\n\n  toIso8601(date: Date): string {\n    return date.toISOString();\n  }\n\n  isDateInstance(obj: any): boolean {\n    return isDate(obj);\n  }\n\n  isValid(date: Date): boolean {\n    return isValid(date);\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n}\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {UserTodo} from '../models/emotion.model';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n    selector: 'app-add-todo-dialog',\n    templateUrl: './add-todo-dialog.component.html',\n    styleUrls: ['./add-todo-dialog.component.css']\n})\nexport class AddTodoDialogComponent {\n    isNewTodo = true;\n    todo: UserTodo = {\n        isAi: false,\n        isDeleted: false,\n        isRead: false,\n        title: '', description: '', isDone: false, isArchived: false\n    };\n\n    todoForm: FormGroup;\n\n    constructor(public dialogRef: MatDialogRef<AddTodoDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n        this.todoForm = new FormGroup({\n            'title': new FormControl('', Validators.required),\n            'description': new FormControl('')\n        });\n    }\n\n    ngOnInit() {\n        if (this.data?.todo) {\n            this.todo = this.data.todo;\n            this.isNewTodo = false;\n            this.todoForm.setValue({title: this.todo.title, description: this.todo.description});\n        } else {\n            this.todo = {\n                isAi: false,\n                isDeleted: false,\n                isRead: false,\n                title: '', description: '', isDone: false, isArchived: false\n            }\n        }\n    }\n\n    onSave() {\n        this.todo.title = this.todoForm.value.title;\n        this.todo.description = this.todoForm.value.description;\n        this.dialogRef.close(this.todo);\n    }\n\n    onCancel() {\n        this.dialogRef.close(false);\n    }\n}\n","<form [formGroup]=\"todoForm\" (ngSubmit)=\"onSave()\">\n  <h1 mat-dialog-title>{{ isNewTodo ? 'Add New Todo' : 'Edit Todo' }}</h1>\n  <div>\n    <mat-form-field class=\"add-todo-dialog-input\">\n      <mat-label>Title</mat-label>\n      <input matInput formControlName=\"title\" required>\n      <mat-error *ngIf=\"todoForm.controls['title'].invalid && todoForm.controls['title'].touched\">\n        Title is required\n      </mat-error>\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field class=\"add-todo-dialog-input\">\n      <mat-label>Description</mat-label>\n      <textarea matInput formControlName=\"description\"></textarea>\n    </mat-form-field>\n  </div>\n  <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" class=\"add-todo-dialog-actions\">\n    <button mat-button class=\"add-todo-dialog-button cancel\" (click)=\"onCancel(); $event.preventDefault()\">Cancel</button>\n    <button mat-button type=\"submit\" [disabled]=\"todoForm.invalid\">{{ isNewTodo ? 'Add' : 'Update' }}</button>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport {CreateEmotionComponent} from \"./create-emotion/create-emotion.component\";\nimport {EmotionsTimelineComponent} from \"./emotions-timeline/emotions-timeline.component\";\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\nimport { AuthGuard } from './services/auth.guard';\nimport {DisplayEmotionComponent} from \"./display-emotion/display-emotion.component\";\nimport { MatListModule } from '@angular/material/list';\nimport {EmotionCalendarComponent} from \"./emotion-calendar/emotion-calendar.component\";\nimport {UserTodosComponent} from \"./user-todos/user-todos.component\";\n\nexport const routes: Routes = [\n  { path: '', redirectTo: 'create-emotion', pathMatch: 'full' },\n  {\n    path: '',\n    component: MainLayoutComponent,\n    children: [\n      { path: 'landing', component: LandingPageComponent },\n      { path: 'login', component: LoginComponent },\n      { path: 'signup', component: SignupComponent },\n      { path: 'create-emotion', component: CreateEmotionComponent , canActivate: [AuthGuard] },\n      { path: 'emotions-timeline', component: EmotionsTimelineComponent , canActivate: [AuthGuard] },\n      { path: 'todos', component: UserTodosComponent , canActivate: [AuthGuard] },\n      { path: 'charts', component: DashboardComponent, canActivate: [AuthGuard] },\n      { path: 'display-emotion', component: DisplayEmotionComponent , canActivate: [AuthGuard]},\n      { path: 'emotions-calendar', component: EmotionCalendarComponent, canActivate: [AuthGuard] },\n    ],\n  },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes), MatListModule],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ui';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { SignupComponent } from './signup/signup.component';\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { CreateEmotionComponent } from './create-emotion/create-emotion.component';\nimport { DisplayEmotionComponent } from './display-emotion/display-emotion.component';\nimport { EmotionsTimelineComponent } from './emotions-timeline/emotions-timeline.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport {MatListModule} from \"@angular/material/list\";\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatSliderModule} from \"@angular/material/slider\";\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport {MatChipsModule} from \"@angular/material/chips\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {ScreenSizeDirective} from \"./directives/screenSize.directive\";\nimport {LayoutModule} from \"@angular/cdk/layout\";\nimport { EmotionCalendarComponent } from './emotion-calendar/emotion-calendar.component';\nimport {MatDatepickerModule} from \"@angular/material/datepicker\";\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from \"@angular/material/core\";\nimport {DateFnsAdapter} from \"./adapters/date-fns.adapter\";\nimport { DayComponent } from './day/day.component';\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport { CustomDatePickerComponent } from './custom-date-picker/custom-date-picker.component';\nimport {MatSlideToggleModule} from \"@angular/material/slide-toggle\";\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\nimport { CanvasJSAngularChartsModule } from '@canvasjs/angular-charts';\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport { DayInfoDialogComponent } from './day-info-dialog/day-info-dialog.component';\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport { NoteTodoComponent } from './note-todo/note-todo.component';\nimport { UserTodosComponent } from './user-todos/user-todos.component';\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport { AddTodoDialogComponent } from './add-todo-dialog/add-todo-dialog.component';\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport { TodoTabComponent } from './todo-tab/todo-tab.component';\nimport {FlexModule} from \"@angular/flex-layout\";\nimport { NoteFormComponent } from './note-form/note-form.component';\nimport { EmotionAnalyzerComponent } from './emotion-analyzer/emotion-analyzer.component';\n\nexport const MAT_DATE_FNS_FORMATS = {\n  parse: {\n    dateInput: 'MM/dd/yyyy',\n  },\n  display: {\n    dateInput: 'MM/dd/yyyy',\n    monthYearLabel: 'MMM yyyy',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM yyyy',\n  },\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LandingPageComponent,\n    SignupComponent,\n    MainLayoutComponent,\n    NavigationComponent,\n    CreateEmotionComponent,\n    DisplayEmotionComponent,\n    EmotionsTimelineComponent,\n    DashboardComponent,\n    ScreenSizeDirective,\n    EmotionCalendarComponent,\n    DayComponent,\n    CustomDatePickerComponent,\n    DayInfoDialogComponent,\n    NoteTodoComponent,\n    UserTodosComponent,\n    AddTodoDialogComponent,\n    TodoTabComponent,\n    NoteFormComponent,\n    EmotionAnalyzerComponent,\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        BrowserAnimationsModule,\n        MatToolbarModule,\n        MatCardModule,\n        MatButtonModule,\n        MatInputModule,\n        MatIconModule,\n        MatListModule,\n        MatSidenavModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatSnackBarModule,\n        MatChipsModule,\n        MatProgressSpinnerModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        LayoutModule,\n        MatDatepickerModule,\n        MatGridListModule,\n        MatTooltipModule,\n        MatTabsModule,\n        NgxChartsModule,\n        MatSlideToggleModule,\n        MatAutocompleteModule,\n        MatExpansionModule,\n        MatProgressBarModule,\n        CanvasJSAngularChartsModule,\n        MatRadioModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatMenuModule,\n        FlexModule\n\n    ],\n  providers: [{ provide: DateAdapter, useClass: DateFnsAdapter }, {\n    provide: DateAdapter,\n    useClass: DateFnsAdapter,\n    deps: [MAT_DATE_LOCALE],\n  },\n    {\n      provide: MAT_DATE_FORMATS,\n      useValue: MAT_DATE_FNS_FORMATS\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\n  AfterViewInit, Component, OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {EmotionService} from '../services/emotion.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {EmotionCacheService} from '../services/emotion-cache.service';\n\nimport {\n    Emotion,\n    EmotionData, EmotionDetectionResult, EmotionFromNoteResult,\n    EmotionRecord,\n    EmotionTypesWithEmotions,\n    EmotionWithSubEmotions, Note,\n    SubEmotion,\n    SubEmotionWrapper, Tag,\n    Trigger\n} from \"../models/emotion.model\";\nimport {AuthService} from \"../services/auth.service\";\nimport {from, Subscription} from \"rxjs\";\nimport {EmotionStateService} from \"../services/emotion-state.service\";\nimport {Router} from \"@angular/router\";\nimport {DateService} from \"../services/date.service\";\nimport {MatOption, ThemePalette} from \"@angular/material/core\";\nimport {NoteService} from \"../services/note.service\";\n\n\n@Component({\n  selector: 'app-create-emotion',\n  templateUrl: './create-emotion.component.html',\n  styleUrls: ['./create-emotion.component.css'],\n  providers: []\n})\nexport class CreateEmotionComponent implements OnInit, AfterViewInit, OnDestroy {\n  isLoadingEmotionCache: boolean = true;\n\n  emotionForm: FormGroup;\n  sliderColor = 'rgba(75, 192, 192, 0.2)';\n\n  emotionCache: EmotionData | undefined;\n\n  emotionTypesWithEmotions: EmotionTypesWithEmotions[] | undefined;\n  emotionWithSubEmotions: EmotionWithSubEmotions[] | undefined;\n\n  noteText: string | null = null;\n\n  step = 0;\n\n  maxNoteLength = 2000; // TODO: Should be fetched from the backend\n\n  isDetectingEmotionWithAI: boolean = false;\n  isSavingEmotionRecord: boolean = false;\n\n  emotionTypes: string[] = [];\n\n\n  @ViewChildren('emotionTypeOptions') emotionTypeOptions!: QueryList<MatOption>;\n  @ViewChildren('emotionOptions') emotionOptions!: QueryList<MatOption>;\n  @ViewChildren('subEmotionOptions') subEmotionOptions!: QueryList<MatOption>;\n  @ViewChildren('triggerOptions') triggerOptions!: QueryList<MatOption>;\n\n  private emotionTypesSubscription!: Subscription;\n  private emotionSelectSubscription!: Subscription;\n  private subEmotionSelectSubscription!: Subscription;\n  private triggerSubscription!: Subscription;\n  private emotionDetected: EmotionDetectionResult | undefined;\n\n  placeHolderText: string = \"Try to describe how this emotion is affecting your daily activities or your interactions with others. Include more context or personal thoughts to convey your emotions more clearly. Are there any noticeable patterns or recurring events? How do you wish to feel instead? What steps do you think you could take to influence your emotional state? Remember, you can also use #hashtags to categorize or highlight key points in your note. To add a todo, simply enclose it in double square brackets like this: [[<your todo here>]]. \";\n\n  constructor(private fb: FormBuilder, private emotionService: EmotionService,\n              private authService: AuthService,\n              private emotionStateService: EmotionStateService,\n              private router: Router,\n              private snackBar: MatSnackBar,\n              private emotionCacheService: EmotionCacheService,\n              private noteService: NoteService,\n              private dateService: DateService) {\n    this.emotionForm = this.fb.group({\n      emotionType: [''],\n      intensity: [0],\n      emotion: [''],\n      trigger: [''],\n      subEmotion: [''],\n      emotionDate: [new Date()],\n      isPublic: [false],\n      emotionNote: [''],\n      tags: [[]],\n      todos: [[]],\n      textTitle: [''],\n      description: [''],\n      suggestion: [''],\n      emotionTime: [''],\n    });\n  }\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all Observables\n    if (this.emotionTypesSubscription) {\n      this.emotionTypesSubscription.unsubscribe();\n    }\n    if (this.emotionSelectSubscription) {\n      this.emotionSelectSubscription.unsubscribe();\n    }\n    if (this.subEmotionSelectSubscription) {\n      this.subEmotionSelectSubscription.unsubscribe();\n    }\n    if (this.triggerSubscription) {\n      this.triggerSubscription.unsubscribe();\n    }\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  ngOnInit(): void {\n    this.emotionCacheService.emotionCache$.subscribe((cachedEmotionData) => {\n      if (cachedEmotionData) {\n        this.emotionCache = cachedEmotionData;\n        this.isLoadingEmotionCache = false;\n      } else {\n          this.updateEmotionCache();\n      }\n    });\n    this.emotionForm.controls['intensity'].setValue(1);\n  }\n\n    private updateEmotionCache() {\n        this.emotionService.getEmotionCache().subscribe({\n            next: (emotionCache) => {\n                this.emotionCache = emotionCache;\n                this.emotionCacheService.updateEmotionCache(emotionCache);\n            },\n            error: (error) => {\n                console.error('Error fetching emotion cache:', error);\n                this.isLoadingEmotionCache = false;\n                this.snackBar.open('Failed to fetch emotion cache', 'Close', {});\n            },\n            complete: () => {\n                console.log('Emotion cache fetch completed');\n                this.isLoadingEmotionCache = false;\n            }\n        });\n    }\n\n    async onSubmit(): Promise<void> {\n      console.log('Submitting emotion record: ', this.isSavingEmotionRecord);\n    if (this.emotionForm.valid) {\n      const emotionFromData = this.emotionForm.value;\n      const emotionRecord = this.convertEmotionFromDataToEmotionRecord(emotionFromData);\n      console.log(`Emotion record to be inserted: ${JSON.stringify(emotionRecord)}`);\n      try {\n        this.isSavingEmotionRecord = true;\n        from(this.emotionService.insertEmotionRecord(emotionRecord)).subscribe(\n          {\n            next: (response) => {\n              console.log('Emotion record inserted successfully', response);\n              this.emotionStateService.updateNewEmotion(response);\n              this.isSavingEmotionRecord = false;\n              this.router.navigate(['/display-emotion']);\n            },\n            error: (error) => {\n              console.error('Error inserting emotion record', error);\n              this.isSavingEmotionRecord = false;\n              this.snackBar.open('Failed to submit the emotion record', 'Close', {\n                duration: 5000,\n                panelClass: ['error-snackbar']\n              });\n            }\n          }\n        )\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n\n  convertEmotionFromDataToEmotionRecord(emotionFromData: any): EmotionRecord {\n    const decodedToken = this.authService.fetchDecodedToken();\n    let emotion: any = null;\n    if (emotionFromData.emotion?.emotion?.id) {\n      emotion = {};\n      emotion.id = emotionFromData.emotion.emotion.id;\n    }\n    const subEmotions: any[] = [];\n    if (emotionFromData.subEmotion?.subEmotionId) {\n      subEmotions.push({subEmotionId: emotionFromData.subEmotion.subEmotionId});\n    }\n    const triggers: any[] = [];\n    if (emotionFromData.trigger?.triggerId) {\n      triggers.push({triggerId: emotionFromData.trigger.triggerId});\n    }\n    const notes: any[] = [];\n    if (emotionFromData.emotionNote) {\n      const note: Note = {\n        text: emotionFromData.emotionNote,\n        title: emotionFromData.textTitle,\n        description: emotionFromData.description,\n        suggestion: emotionFromData.suggestion,\n        todos: emotionFromData.todos\n      }\n      notes.push(note);\n    }\n\n    const tags: Tag[] = [];\n    if (emotionFromData.tags) {\n      emotionFromData.tags.forEach((tag: Tag) => {\n        tags.push(tag);\n      });\n    }\n\n    return {\n      userId: decodedToken.userId,\n      emotionType: emotionFromData.emotionType ?? \"Unknown\",\n      intensity: emotionFromData.intensity,\n      emotion: emotion as Emotion,\n      subEmotions: subEmotions as SubEmotion[],\n      triggers: triggers as Trigger[],\n      notes: notes as Note[],\n      tags: tags as Tag[],\n      created: this.dateService.formatDateToIsoString(emotionFromData.emotionDate)\n    };\n  }\n}\n","<div *ngIf=\"isLoadingEmotionCache\" class=\"page-loading\">\n  <mat-spinner diameter=\"48\"></mat-spinner>\n  <h2>Loading...</h2>\n</div>\n\n<ng-container *ngIf=\"!isLoadingEmotionCache\">\n  <div class=\"create-emotion-container\">\n    <form [formGroup]=\"emotionForm\" (ngSubmit)=\"onSubmit()\">\n      <app-note-form [emotionForm]=\"emotionForm\"></app-note-form>\n    </form>\n  </div>\n</ng-container>\n","import {Component, forwardRef, Injectable, Input} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DateAdapter, NativeDateAdapter, MAT_DATE_FORMATS} from '@angular/material/core';\n\n@Injectable()\nexport class CustomDateAdapter extends NativeDateAdapter {\n  override getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  }\n}\n\nexport const MY_DATE_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n    weekday: 'short'\n  },\n};\n\n@Component({\n  selector: 'app-custom-date-picker',\n  templateUrl: './custom-date-picker.component.html',\n  styleUrls: ['./custom-date-picker.component.css'],\n  providers: [\n    { provide: DateAdapter, useClass: CustomDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS },\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CustomDatePickerComponent), multi: true }\n  ]\n})\nexport class CustomDatePickerComponent implements ControlValueAccessor {\n  @Input() placeholder: string = '';\n  control: FormControl = new FormControl(null);\n\n  private onChange: (value: Date) => void = () => {};\n  private onTouched: () => void = () => {};\n\n  constructor() {\n    this.control.valueChanges.subscribe(value => {\n      this.onChange(value);\n    });\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.control.setValue(obj, {emitEvent: false});\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    isDisabled ? this.control.disable() : this.control.enable();\n  }\n}\n\n","<mat-form-field>\n  <input matInput [placeholder]=\"placeholder\" [matDatepicker]=\"picker\" [formControl]=\"control\">\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-datepicker #picker></mat-datepicker>\n</mat-form-field>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {EmotionService} from \"../services/emotion.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {DateService} from \"../services/date.service\";\nimport {\n    EmotionTypesTriggersDoughnutData,\n    LineChartData,\n    LineChartTrendDataRow,\n    LineChartTrendDataSet\n} from \"../models/emotion.model\";\nimport {FormControl} from \"@angular/forms\";\nimport {BreakpointObserver, Breakpoints} from \"@angular/cdk/layout\";\n\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n    isLoading: boolean = true;\n    activeTab: number = 0; // Variable to store the index of the active tab\n\n    startDate: Date | null = null;\n    endDate: Date | null = null;\n\n    startDateControl = new FormControl();\n    endDateControl = new FormControl();\n\n    doughnutEmotionTypeRecordCountChartOptions: any;\n    doughnutEmotionTypeIntensityChartOptions: any;\n    doughnutTriggersRecordCountChartOptions: any;\n    doughnutTriggersIntensityChartOptions: any;\n\n    seriesName: 'Distribution' | 'Trend' = 'Distribution';\n    seriesType: 'distribution' | 'trend' = 'distribution';\n    chartType: 'emotion' | 'trigger' = 'emotion'; // 'emotion' or 'trigger'\n    plotType: 'recordCount' | 'intensity' = 'recordCount'; // 'recordCount' or 'intensity'\n\n    isMobile: boolean | undefined;\n\n    lineChartEmotionTypeCountOptions: any;\n    lineChartEmotionTypeIntensityOptions: any;\n    lineChartTriggerCountOptions: any;\n    lineChartTriggerIntensityOptions: any;\n\n\n    constructor(\n        private emotionService: EmotionService,\n        private snackBar: MatSnackBar,\n        private dateService: DateService,\n        private breakpointObserver: BreakpointObserver\n    ) {\n    }\n\n    ngOnInit() {\n        this.breakpointObserver.observe([\n            Breakpoints.Handset\n        ]).subscribe(result => {\n            this.isMobile = result.matches;\n        });\n        this.initDateRange();\n        this.subscribeToDateChanges();\n        this.fetchChartData();\n    }\n\n    initDateRange(): void {\n        const dateRange = this.dateService.createThreeMonthDateRange();\n        this.startDate = this.startDate || dateRange.start;\n        this.endDate = this.endDate || dateRange.end;\n    }\n\n    subscribeToDateChanges(): void {\n        this.startDateControl.valueChanges.subscribe(value => {\n            this.startDate = value;\n            console.log('startDateControl value changed:', value);\n        });\n        this.endDateControl.valueChanges.subscribe(value => {\n            this.endDate = value;\n            console.log('endDateControl value changed:', value);\n        });\n    }\n\n    fetchChartData(): void {\n        this.isLoading = true;\n        const dateRangeStr = {\n            start: this.dateService.formatDateToIsoString(this.startDate!),\n            end: this.dateService.formatDateToIsoString(this.endDate!)\n        };\n\n        this.getEmotionTypeTriggersChartData(dateRangeStr);\n        this.getEmotionTypeTriggersTrendsChartData(dateRangeStr);\n    }\n\n    getEmotionTypeTriggersChartData(dateRange: any): void {\n        this.emotionService.fetchEmotionDoughnutEmotionTypeTriggersChartDataForDateRange(dateRange).subscribe({\n            next: (response: EmotionTypesTriggersDoughnutData) => {\n                this.handleEmotionTypeChartData(response);\n                this.handleEmotionTriggerChartData(response);\n            },\n            error: (error) => this.handleError('Error getting EmotionDoughnutEmotionTypeChartData', error)\n        });\n    }\n\n    getEmotionTypeTriggersTrendsChartData(dateRange: any): void {\n        console.log('getEmotionTypeTriggersTrendsChartData', dateRange);\n        this.emotionService.fetchMonthEmotionRecordsByDayForCurrentUser(dateRange).subscribe({\n            next: (response: LineChartTrendDataSet) => {\n                console.log('LineChartTrendDataSet[] received:', response);\n                this.handleEmotionTypeTrendChartData(response);\n                this.handleEmotionTriggerTrendChartData(response);\n            },\n            error: (error) => this.handleError('Error getting EmotionDoughnutEmotionTypeChartData', error)\n        });\n    }\n\n    handleEmotionTypeChartData(response: EmotionTypesTriggersDoughnutData): void {\n        this.doughnutEmotionTypeRecordCountChartOptions = this.createDoughnutChartOptions(response.emotionTypes,\n            \"Emotion Categories Breakdown: Record Count\", 'recordsCount');\n        this.doughnutEmotionTypeIntensityChartOptions = this.createDoughnutChartOptions(response.emotionTypes,\n            \"Emotion Categories Breakdown: Intensity\", 'intensitySum');\n        this.isLoading = false;\n        console.log('EmotionDoughnutEmotionTypeChartData received:', response);\n    }\n\n\n    handleEmotionTriggerChartData(response: EmotionTypesTriggersDoughnutData): void {\n        this.doughnutTriggersRecordCountChartOptions = this.createDoughnutChartOptions(response.triggers,\n            \"Reasons Breakdown: Record Count\", 'recordsCount');\n        this.doughnutTriggersIntensityChartOptions = this.createDoughnutChartOptions(response.triggers,\n            \"Reasons Breakdown: Intensity\", 'intensitySum');\n        this.isLoading = false;\n        console.log('EmotionDoughnutTriggerChartData received:', response);\n    }\n\n    createDoughnutChartOptions(data: any[], title: string, dataProperty: string): any {\n        return {\n            animationEnabled: true,\n            title: {text: title, fontWeight: \"normal\"},\n            data: [{\n                type: \"doughnut\",\n                yValueFormatString: \"#,###.##'%'\",\n                indexLabel: \"{name}\",\n                dataPoints: data.map(dp => ({\n                    y: dp[dataProperty],\n                    name: dp.name,\n                    color: dp.color\n                }))\n            }]\n        };\n    }\n\n\n    private handleEmotionTriggerTrendChartData(response: LineChartTrendDataSet) {\n        this.lineChartTriggerCountOptions = this.createLineChartOptions(response, \"Reasons Trend: Record Count\",  response.triggerTypes, \"triggersAccumulated\", 'recordsCount', \"Record Count\");\n        this.lineChartTriggerIntensityOptions = this.createLineChartOptions(response, \"Reasons Trend: Intensity\", response.triggerTypes, \"triggersAccumulated\", 'intensitySum', \"Intensity\");\n        console.log('lineChartTriggerCountOptions', this.lineChartTriggerCountOptions);\n        console.log('lineChartTriggerIntensityOptions', this.lineChartTriggerIntensityOptions);\n    }\n\n    private handleEmotionTypeTrendChartData(response: LineChartTrendDataSet) {\n        this.lineChartEmotionTypeCountOptions = this.createLineChartOptions(response, \"Emotion Categories Trend: Record Count\", response.emotionTypes, \"emotionTypeAccumulated\", 'recordsCount', \"Record Count\");\n        this.lineChartEmotionTypeIntensityOptions = this.createLineChartOptions(response, \"Emotion Categories Trend: Intensity Count\", response.emotionTypes, \"emotionTypeAccumulated\", 'intensitySum', \"Intensity\");\n        console.log('lineChartEmotionTypeCountOptions', this.lineChartTriggerCountOptions);\n        console.log('lineChartEmotionTypeIntensityOptions', this.lineChartTriggerIntensityOptions);\n    }\n\n    createLineChartOptions(data: LineChartTrendDataSet, title: string, objectTypes: string[], chartType: string, dataProperty: string, axisYTitle: string): any {\n        function mapDataPoints(data: LineChartTrendDataRow[], chartType: string,\n                               mapType: string, dataProperty: keyof LineChartData): any[] {\n            return data.map(dp => {\n                const dataset =\n                    chartType === 'emotionTypeAccumulated' ? dp.emotionTypeAccumulated : dp.triggersAccumulated;\n                const yValue = dataset[mapType]?.[dataProperty]*10 || 0;\n                return {x: new Date(dp.date), y: yValue};\n            });\n        }\n\n        return {\n            animationEnabled: true,\n            theme: \"light2\",\n            title: {\n                text: title\n            },\n            axisX: {\n                valueFormatString: \"DD-MMM-YYYY\",\n                intervalType: \"day\",\n                interval: 3,\n            },\n            axisY: {\n                title: axisYTitle,\n            },\n            toolTip: {\n                shared: true\n            },\n            legend: {\n                cursor: \"pointer\",\n                itemclick: function (e: any) {\n                    e.dataSeries.visible = !(typeof (e.dataSeries.visible) === \"undefined\" || e.dataSeries.visible);\n                    e.chart.render();\n                }\n            },\n            data: objectTypes.map((mapType: string) => {\n                return {\n                    type: \"line\",\n                    name: mapType,\n                    showInLegend: true,\n                    color: data.colors[mapType],\n                    dataPoints: mapDataPoints(data.rows, chartType, mapType, dataProperty as keyof LineChartData)\n                }\n            })\n        }\n    }\n\n\n    handleError(message: string, error: any): void {\n        this.isLoading = false;\n        console.error(message, error);\n        this.snackBar.open(message, 'Close', {duration: 5000});\n    }\n\n    setActiveTab(index: number): void {\n        this.activeTab = index;\n    }\n\n    onToggleSeriesType() {\n        console.log('this.seriesType', this.seriesType);\n        console.log('this.chartType', this.chartType);\n        console.log('this.plotType', this.plotType);\n        if (this.seriesType === 'trend') {\n            this.seriesName = 'Trend';\n        } else {\n            this.seriesName = 'Distribution';\n        }\n    }\n}\n","`<div [ngClass]=\"{'mobile': isMobile, 'desktop': !isMobile}\">\n\n  <mat-accordion class=\"create-emotion-accordion\">\n\n    <mat-expansion-panel hideToggle>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Dates\n        </mat-panel-title>\n        <mat-panel-description>\n          Choose a date range\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <app-custom-date-picker placeholder=\"Start Date\" [formControl]=\"startDateControl\"></app-custom-date-picker>\n      <app-custom-date-picker placeholder=\"End Date\" [formControl]=\"endDateControl\"></app-custom-date-picker>\n      <mat-action-row>\n        <button mat-button color=\"primary\"  type=\"button\" (click)=\"fetchChartData()\">Update Chart</button>\n      </mat-action-row>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel expanded=\"true\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Chart Options\n        </mat-panel-title>\n        <mat-panel-description>\n          Weight the data by record count or by intensity\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <mat-action-row class=\"radio-action-row\">\n        <div class=\"radio-container\">\n          <mat-radio-group [(ngModel)]=\"seriesType\" (change)=\"onToggleSeriesType()\">\n            <mat-radio-button value=\"distribution\">Distribution</mat-radio-button>\n            <mat-radio-button value=\"trend\">Trend Over Time</mat-radio-button>\n          </mat-radio-group>\n          <mat-radio-group [(ngModel)]=\"plotType\">\n            <mat-radio-button value=\"recordCount\">Record Count</mat-radio-button>\n            <mat-radio-button value=\"intensity\">Intensity</mat-radio-button>\n          </mat-radio-group>\n          <mat-radio-group [(ngModel)]=\"chartType\">\n            <mat-radio-button value=\"emotion\">Emotions</mat-radio-button>\n            <mat-radio-button value=\"trigger\">Reasons</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </mat-action-row>\n    </mat-expansion-panel>\n\n  </mat-accordion>\n\n  <mat-tab-group [(selectedIndex)]=\"activeTab\">\n\n    <mat-tab [label]=seriesName>\n      <div *ngIf=\"isLoading\" class=\"loading-screen\">\n        <mat-spinner diameter=\"48\"></mat-spinner>\n        <h2>Loading Emotions Chart...</h2>\n      </div>\n\n      <ng-container *ngIf=\"!isLoading\">\n\n        <div class=\"chart-container\" id=\"chartContainerId\">\n          <canvasjs-chart *ngIf=\"seriesType === 'distribution' && chartType === 'emotion' && plotType === 'recordCount'\"\n                          [options]=\"doughnutEmotionTypeRecordCountChartOptions\"\n                          [styles]=\"{width: '100%', height:'300px'}\"></canvasjs-chart>\n          <canvasjs-chart *ngIf=\"seriesType === 'distribution' && chartType === 'emotion' && plotType === 'intensity'\"\n                          [options]=\"doughnutEmotionTypeIntensityChartOptions\"\n                          [styles]=\"{width: '100%', height:'300px'}\"></canvasjs-chart>\n          <canvasjs-chart *ngIf=\"seriesType === 'distribution' && chartType === 'trigger' && plotType === 'recordCount'\"\n                          [options]=\"doughnutTriggersRecordCountChartOptions\"\n                          [styles]=\"{width: '100%', height:'300px'}\"></canvasjs-chart>\n          <canvasjs-chart *ngIf=\"seriesType === 'distribution' && chartType === 'trigger' && plotType === 'intensity'\"\n                          [options]=\"doughnutTriggersIntensityChartOptions\"\n                          [styles]=\"{width: '100%', height:'300px'}\"></canvasjs-chart>\n\n          <canvasjs-chart *ngIf=\"seriesType === 'trend' && chartType === 'emotion' && plotType === 'recordCount'\"\n                          [options]=\"lineChartEmotionTypeCountOptions\"\n                          [styles]=\"{width: '100%', height:'300px'}\"></canvasjs-chart>\n          <canvasjs-chart *ngIf=\"seriesType === 'trend' && chartType === 'emotion' && plotType === 'intensity'\"\n                          [options]=\"lineChartEmotionTypeIntensityOptions\"\n                          [styles]=\"{width: '100%', height:'300px'}\"></canvasjs-chart>\n          <canvasjs-chart *ngIf=\"seriesType === 'trend' && chartType === 'trigger' && plotType === 'recordCount'\"\n                          [options]=\"lineChartTriggerCountOptions\"\n                          [styles]=\"{width: '100%', height:'300px'}\"></canvasjs-chart>\n          <canvasjs-chart *ngIf=\"seriesType === 'trend' && chartType === 'trigger' && plotType === 'intensity'\"\n                          [options]=\"lineChartTriggerIntensityOptions\"\n                          [styles]=\"{width: '100%', height:'300px'}\"></canvasjs-chart>\n\n        </div>\n      </ng-container>\n    </mat-tab>\n\n    <!-- Remaining tabs -->\n  </mat-tab-group>\n</div>\n`\n","import {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport {ColorService} from \"../services/color.service\";\n\n@Component({\n  selector: 'app-day-info-dialog',\n  templateUrl: './day-info-dialog.component.html',\n  styleUrls: ['./day-info-dialog.component.css']\n})\nexport class DayInfoDialogComponent {\n\n  displayedColumns: string[] = ['date',  'intensity', 'note'];\n  records: MatTableDataSource<any>;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n              private dialogRef: MatDialogRef<DayInfoDialogComponent>,\n              private colorService: ColorService\n              ) {\n    const dataArr: any[] = [];  // This will hold our record data\n\n    if (this.data.day) {\n      const day = this.data.day;\n\n      for (let i = 0; i < day.records.length; i++) {\n        let record = day.records[i];\n        let recordInfo = {\n          date: record.created,\n          associatedEmotion: record.subEmotions?.length > 0 ? record.subEmotions[0].subEmotionName : null,\n          emotion: record.emotion?.emotionName,\n          intensity: record.intensity,\n          trigger: record.triggers.length > 0 ? record.triggers[0].triggerName : null,\n          note: record.notes.length > 0 ? record.notes[0]?.title : null,\n          color: this.colorService.getColorForEmotionType(record.emotionType,\n            true)\n        };\n        console.log(\"day recordInfo: \", recordInfo);\n        dataArr.push(recordInfo);\n      }\n    }\n\n    this.records = new MatTableDataSource(dataArr);  // Assign the data array to MatTableDataSource\n  }\n\n  get moreThanFiveRecords() {\n    return this.data.day && this.data.day.records.length > 5;\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"close-button-container\">\n  <button mat-icon-button (click)=\"closeDialog()\"><mat-icon>close</mat-icon></button>\n</div>\n\n<div class=\"table-container\">\n<table mat-table [dataSource]=\"records\" class=\"mat-elevation-z8\">\n\n  <!-- Date Column -->\n  <ng-container matColumnDef=\"date\">\n    <th mat-header-cell *matHeaderCellDef>Time</th>\n    <td mat-cell *matCellDef=\"let record\">{{ record.date | date: 'shortTime' }}</td>\n  </ng-container>\n  <!-- Emotion Column -->\n  <ng-container matColumnDef=\"emotion\">\n    <th mat-header-cell *matHeaderCellDef>Emotion</th>\n    <td mat-cell *matCellDef=\"let record\">{{ record.emotion }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"associated emotion\">\n    <th mat-header-cell *matHeaderCellDef>Associated Emotion</th>\n    <td mat-cell *matCellDef=\"let record\">{{ record.associatedEmotion }}</td>\n  </ng-container>\n\n  <!-- Intensity Column -->\n  <ng-container matColumnDef=\"intensity\">\n    <th mat-header-cell *matHeaderCellDef>Intensity</th>\n    <td mat-cell *matCellDef=\"let record\">{{ record.intensity }}</td>\n  </ng-container>\n\n  <!-- Trigger Column -->\n  <ng-container matColumnDef=\"trigger\">\n    <th mat-header-cell *matHeaderCellDef>Reason</th>\n    <td mat-cell *matCellDef=\"let record\">{{ record.trigger }}</td>\n  </ng-container>\n\n  <!-- Note Column -->\n  <ng-container matColumnDef=\"note\">\n    <th mat-header-cell *matHeaderCellDef>Note</th>\n    <td mat-cell *matCellDef=\"let record\">{{ record.note }}</td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let record; columns: displayedColumns;\" [ngStyle]=\"{'background-color': record.color}\"></tr>\n\n</table>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {DayOfWeek} from \"../models/emotion.model\";\nimport { DayInfoDialogComponent } from '../day-info-dialog/day-info-dialog.component';\nimport {MatDialog} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-day',\n  templateUrl: './day.component.html',\n  styleUrls: ['./day.component.css']\n})\nexport class DayComponent {\n  @Input() day: DayOfWeek | null = null;\n\n  private hoverTimeout: any;\n\n\n  constructor(public dialog: MatDialog) {}\n\n  showDayInfo() {\n    this.dialog.open(DayInfoDialogComponent, {\n      data: {\n        day: this.day,\n        getAverageIntensity: () => this.getAverageIntensity()\n      },\n      hasBackdrop: true,       // this will show a backdrop behind the dialog (default is true)\n      disableClose: false\n    });\n  }\n\n\n  getColor() {\n    return this.day?.dayColor\n  }\n\n  getAverageIntensity() {\n    return this.day?.averageIntensity.toFixed(2)\n  }\n\n\n  onMouseLeave() {\n    clearTimeout(this.hoverTimeout);\n  }\n}\n","<div\n  class=\"day\"\n  [style.background-color]=\"getColor()\"\n  (mousedown)=\"showDayInfo()\"\n  (mouseleave)=\"onMouseLeave()\"\n>\n\n  <div class=\"date\" *ngIf=\"day?.date !== 0; else placeholder\">{{ day?.date }}</div>\n  <ng-template #placeholder><div class=\"placeholder\"></div></ng-template>\n  <div class=\"average-intensity\" *ngIf=\"day?.date !== 0; else placeholder2\">{{ getAverageIntensity() }}</div>\n  <ng-template #placeholder2><div class=\"placeholder\"></div></ng-template>\n</div>\n","import { Directive, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n@Directive({\n  selector: '[appScreenSize]'\n})\nexport class ScreenSizeDirective implements OnInit, OnDestroy {\n  @Input() largeScreenMode = 'side';\n  @Input() smallScreenMode = 'over';\n\n  private screenSizeSubscription!: Subscription;\n\n  constructor(private el: ElementRef, private breakpointObserver: BreakpointObserver) {}\n\n  ngOnInit() {\n    this.screenSizeSubscription = this.breakpointObserver.observe([Breakpoints.Small, Breakpoints.HandsetPortrait]).subscribe(result => {\n      if (result.matches) {\n        this.el.nativeElement.mode = this.smallScreenMode;\n      } else {\n        this.el.nativeElement.mode = this.largeScreenMode;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.screenSizeSubscription) {\n      this.screenSizeSubscription.unsubscribe();\n    }\n  }\n}\n","import {Component} from '@angular/core';\nimport {EmotionService} from \"../services/emotion.service\";\nimport {EmotionStateService} from \"../services/emotion-state.service\";\nimport {EmotionFromNoteResult, EmotionRecord, NoteTemplate, SuggestedAction, Tag} from '../models/emotion.model';\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {DateService} from \"../services/date.service\";\nimport {MatChipInputEvent} from \"@angular/material/chips\";\nimport { Router } from '@angular/router';\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {EmotionAnalyzerComponent} from \"../emotion-analyzer/emotion-analyzer.component\";\nimport {NoteService} from \"../services/note.service\";\n\n\n@Component({\n  selector: 'app-display-emotion',\n  templateUrl: './display-emotion.component.html',\n  styleUrls: ['./display-emotion.component.css']\n})\nexport class DisplayEmotionComponent {\n\n\n  constructor(private emotionService: EmotionService,\n              private emotionStateService: EmotionStateService,\n              private snackBar: MatSnackBar,\n              public dateService: DateService,\n              private noteService: NoteService,\n              private router: Router,\n              public dialog: MatDialog) {\n  }\n\n  noteTemplates: NoteTemplate[] | null = null;\n\n\n  isLoadingNotes: boolean = false;\n  isLoadingActions: boolean = false;\n\n\n  isLoading: boolean = true;\n\n\n  emotion: EmotionRecord | null = null;\n\n  note: string = '';\n\n  suggestedActions: SuggestedAction[] | null = null;\n\n  separatorKeysCodes: number[] = [13, 188];\n  addOnBlur: any = true;\n\n  isDetectingEmotionWithAI: boolean = false;\n\n  openAnalyzeManuallyDialog() {\n    console.log('Open analyze manually dialog', this.emotion );\n    const dialogRef = this.dialog.open(EmotionAnalyzerComponent, {\n      width: '325px', height: '585px', data: { emotionRecord: this.emotion }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        alert(`The dialog was closed with result: ${result}`);\n        dialogRef.close();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.emotionStateService.newEmotionRecord$\n        .subscribe((newEmotion) => {\n          if (newEmotion) {\n            this.emotion = newEmotion;\n            this.isLoading = false;\n            console.log('New emotion received:', newEmotion);\n          } else {\n            this.router.navigate(['/emotions-timeline']).\n            then(() => console.log('Navigated to emotions-timeline page'));\n            this.isLoading = false;\n          }\n        });\n  }\n\n\n  deleteTag(tag: Tag) {\n    console.log('remove tag', tag);\n    this.emotionService.deleteTag(tag.tagId!)\n      .subscribe({\n        next: (isDeleted) => {\n          if (isDeleted) {\n            if (this.emotion?.tags) {\n              this.emotion.tags = this.emotion.tags?.filter((t: Tag) => {\n                return t.tagId !== tag.tagId;\n              });\n              this.snackBar.open(`Tag deleted successfully: ${tag.tagName}`, 'Close', {\n                duration: 5000,\n              });\n              console.log('Tag deleted successfully');\n              this.emotionStateService.updateNewEmotion(this.emotion);\n            }\n          } else {\n            this.snackBar.open(`Error deleting tag ${tag.tagName}`, 'Close', {\n              duration: 5000,\n            });\n          }\n        },\n        error: (error) => {\n          console.error('Error deleting tag', error);\n          this.isLoadingNotes = false;\n          this.snackBar.open('Error deleting tag', 'Close', {\n            duration: 5000,\n          });\n        }\n      });\n  }\n  addTag(event: MatChipInputEvent) {\n    const tagName = (event.value || '').trim();\n    console.log('Add tag', tagName);\n    this.emotionService.addTag(tagName!, this.emotion!.id!)\n      .subscribe({\n        next: (isAdded) => {\n          if (isAdded) {\n            this.emotion?.tags?.push({tagName: tagName});\n          }\n          event.chipInput!.clear();\n          this.snackBar.open(`Tag added successfully: ${tagName}`, 'Close', {\n            duration: 5000,\n          });\n        },\n        error: (error) => {\n          console.error('Error adding tag', error);\n          this.isLoadingNotes = false;\n          this.snackBar.open(`Error adding tag ${tagName}`, 'Close', {\n            duration: 5000,\n          });\n        }\n      });\n  }\n\n  detectEmotions() {\n    this.isDetectingEmotionWithAI = true;\n    console.log('Detecting emotion for note: ', this.emotion?.notes![0]);\n    if(this.emotion?.notes[0]?.text) {\n      const note = this.emotion?.notes![0];\n      note.emotionRecordId = this.emotion?.id;\n      this.noteService.detectEmotion(note).subscribe({\n        next: (response: EmotionFromNoteResult) => {\n          console.log('Emotion detected successfully', response);\n          if (response != null && response.emotionRecord != null) {\n            this.emotion = response.emotionRecord;\n            this.emotionStateService.updateNewEmotion(this.emotion!);\n          }\n          this.isDetectingEmotionWithAI = false;\n        },\n        error: (error) => {\n          console.error('Error detecting emotion', error);\n          this.isDetectingEmotionWithAI = false;\n          this.snackBar.open('Error detecting emotion', 'Close', {\n            duration: 5000,\n          });\n        }\n      });\n    } else {\n      this.isDetectingEmotionWithAI = false;\n      this.snackBar.open('Error detecting emotion - empty note', 'Close', {\n        duration: 5000,\n      });\n    }\n  }\n\n  formatDateFromDb() {\n    return this.dateService.formatDateFromDb( this.emotion?.created!)\n  }\n}\n","<div *ngIf=\"isLoading\" class=\"loading-screen\">\n  <mat-spinner diameter=\"48\"></mat-spinner>\n  <h2>Loading...</h2>\n</div>\n<ng-container *ngIf=\"!isLoading && emotion\">\n  <div class=\"display-emotion-container\">\n    <h2>Emotion Details</h2>\n    <div class=\"card-container\">\n      <mat-card>\n        <mat-card-content>\n          <div>\n            <strong>Emotion Type:</strong> {{ emotion.emotionType }}\n          </div>\n          <div *ngIf=\"emotion.emotion\">\n            <strong>Emotion:</strong> {{ emotion.emotion.emotionName }}\n          </div>\n          <div>\n            <strong>Intensity:</strong> {{ emotion.intensity }}\n          </div>\n          <div *ngIf=\"emotion.subEmotions[0]\">\n            <strong>Sub-Emotion:</strong> {{ emotion.subEmotions[0].subEmotionName }}\n          </div>\n          <div *ngIf=\"emotion.triggers[0]\">\n            <strong>Trigger:</strong> {{ emotion.triggers[0].description }}\n          </div>\n          <div *ngIf=\"emotion.tags[0]\">\n            <strong>Tags:</strong>\n            <span *ngFor=\"let tag of emotion.tags; let last = last\">\n              {{ tag.tagName }}{{ last ? '' : ', ' }}\n            </span>\n          </div>\n          <div>\n            <strong>Created:</strong> {{  this.formatDateFromDb() }}\n          </div>\n        </mat-card-content>\n      </mat-card>\n\n      <mat-form-field *ngIf=\"emotion.tags[0]\" class=\"example-chip-list\">\n        <mat-label>Note Tags</mat-label>\n        <mat-chip-grid #chipGrid>\n          <mat-chip-row *ngFor=\"let tag of emotion.tags\"\n                        (removed)=\"deleteTag(tag)\"\n                        [editable]=\"false\">\n            {{tag.tagName}}\n            <button matChipRemove [attr.aria-label]=\"'remove ' + tag.tagName\">\n              <mat-icon>cancel</mat-icon>\n            </button>\n          </mat-chip-row>\n          <input [matChipInputFor]=\"chipGrid\"\n                 [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                 [matChipInputAddOnBlur]=\"addOnBlur\"\n                 (matChipInputTokenEnd)=\"addTag($event)\"/>\n        </mat-chip-grid>\n      </mat-form-field>\n    </div>\n\n    <div *ngIf=\"emotion && emotion.notes.length > 0\">\n      <h3>Notes:</h3>\n      <div *ngFor=\"let noteElem of emotion.notes\">\n        <mat-accordion class=\"example-headers-align\">\n          <mat-expansion-panel  expanded=\"true\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Emotion\n              </mat-panel-title>\n              <mat-panel-description>\n                Title: {{noteElem.title}}\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            {{noteElem.text}}\n\n            <mat-action-row>\n              <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"openAnalyzeManuallyDialog()\">Analyze Manually</button>\n              <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"detectEmotions()\" [disabled]=\"isDetectingEmotionWithAI\">\n                Analyze with AI\n                <div *ngIf=\"isDetectingEmotionWithAI\" class=\"loading-screen\">\n                  <mat-spinner diameter=\"24\" color=\"accent\" ></mat-spinner>\n                </div>\n              </button>\n            </mat-action-row>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel *ngIf=\"noteElem.description\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Description\n              </mat-panel-title>\n              <mat-panel-description>\n                The description of the note by AI\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            {{noteElem.description}}\n          </mat-expansion-panel>\n\n          <mat-expansion-panel *ngIf=\"noteElem.suggestion\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Suggestions\n              </mat-panel-title>\n              <mat-panel-description>\n                Suggested actions to take\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            {{noteElem.suggestion}}\n          </mat-expansion-panel>\n\n          <mat-expansion-panel *ngIf=\"noteElem.todos && noteElem.todos.length > 0\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Todos\n              </mat-panel-title>\n              <mat-panel-description>\n                Todos associated with the note\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            <app-note-todo *ngFor=\"let todo of noteElem.todos\" [noteTodo]=\"todo\"></app-note-todo>\n          </mat-expansion-panel>\n        </mat-accordion>\n      </div>\n    </div>\n    </div>\n</ng-container>\n","import {\n  Component,\n  Inject,\n  OnInit,\n  QueryList,\n  ViewChildren\n} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {EmotionService} from '../services/emotion.service';\nimport {\n  EmotionData,\n  EmotionFromNoteResult, EmotionRecord, EmotionTypesWithEmotions,\n  EmotionWithSubEmotions,\n  SubEmotionWrapper,\n  Trigger\n} from \"../models/emotion.model\";\nimport {MatOption} from \"@angular/material/core\";\nimport {from, Observable, of, Subscription} from \"rxjs\";\nimport {EmotionStateService} from \"../services/emotion-state.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {EmotionCacheService} from \"../services/emotion-cache.service\";\nimport {NoteService} from \"../services/note.service\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {map, switchMap} from \"rxjs/operators\";\nimport {ColorService} from \"../services/color.service\";\n\n@Component({\n  selector: 'app-emotion-analyzer',\n  templateUrl: './emotion-analyzer.component.html',\n  styleUrls: ['./emotion-analyzer.component.css']\n})\nexport class EmotionAnalyzerComponent implements OnInit {\n\n  emotionRecord: EmotionRecord | undefined;\n  emotionForm: FormGroup;\n\n  emotionTypes: string[] = [];\n\n  private subscriptions: Subscription[] = []\n\n\n  @ViewChildren('emotionTypeOptions') emotionTypeOptions!: QueryList<MatOption>;\n  @ViewChildren('emotionOptions') emotionOptions!: QueryList<MatOption>;\n  @ViewChildren('subEmotionOptions') subEmotionOptions!: QueryList<MatOption>;\n  @ViewChildren('triggerOptions') triggerOptions!: QueryList<MatOption>;\n\n  isLoadingEmotionCache: boolean = true;\n\n  emotionCache$: Observable<EmotionData> | undefined;\n\n  emotionTypesWithEmotions: EmotionTypesWithEmotions[] | undefined;\n  emotionWithSubEmotions: EmotionWithSubEmotions[] | undefined;\n\n  isSavingEmotionRecord: boolean = false;\n  emotionTypes$: Observable<string[]>;\n  mainEmotions$: Observable<EmotionWithSubEmotions[]> | undefined;\n  subEmotions$: Observable<SubEmotionWrapper[]> | undefined;\n  triggers$: Observable<Trigger[]> | undefined;\n\n\n  constructor(private fb: FormBuilder, private emotionService: EmotionService,\n              private emotionStateService: EmotionStateService,\n              private snackBar: MatSnackBar,\n              private emotionCacheService: EmotionCacheService,\n              private noteService: NoteService,\n              protected colorService: ColorService,\n              public dialogRef: MatDialogRef<EmotionAnalyzerComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.emotionForm = this.fb.group({\n      emotionType: [''],\n      intensity: [0],\n      emotion: [''],\n      trigger: [''],\n      subEmotion: [''],\n      emotionDate: [''],\n      emotionNote: [''],\n      tags: [[]],\n      todos: [[]],\n      textTitle: [''],\n      description: [''],\n      suggestion: [''],\n      emotionTime: [''],\n      createFromNote: [false],\n    });\n    this.emotionRecord = data.emotionRecord;\n\n    this.emotionTypes$ = this.getEmotionTypes();\n    this.mainEmotions$ = this.getMainEmotions();\n    this.subEmotions$ = this.getSubEmotions();\n    this.triggers$ = this.getTriggers();\n  }\n\n  ngOnInit(): void {\n    const emotionCacheSubscription = this.emotionCacheService.emotionCache$.subscribe(\n      (cachedEmotionData) => {\n        if (cachedEmotionData) {\n          this.emotionCache$ = of(cachedEmotionData);\n          this.isLoadingEmotionCache = false;\n          console.log('Emotion cache in EmotionAnalyzerComponent: ', cachedEmotionData);\n\n        } else {\n          console.log('Emotion cache not found in EmotionAnalyzerComponent');\n          this.updateEmotionCache();\n        }\n        console.log('Emotion record in EmotionAnalyzerComponent: ', this.emotionRecord);\n      });\n    this.subscriptions.push(emotionCacheSubscription);\n\n    const afterOpenedSubscription = this.dialogRef.afterOpened().subscribe(() => {\n        this.populateEmotionAnalyzeDialog();\n      }\n    );\n    this.subscriptions.push(afterOpenedSubscription);\n  }\n\n  private populateEmotionAnalyzeDialog() {\n    this.setFormControlValueForObservable(\n      this.emotionTypes$,\n      'emotionType',\n      (emotionType: string) => emotionType,\n      this.emotionRecord?.emotionType\n    );\n    this.setFormControlValueForObservable(\n      this.mainEmotions$,\n      'emotion',\n      (emotion: EmotionWithSubEmotions) => emotion.emotion.id ??\n        emotion.subEmotions[0].subEmotion.parentEmotionId,\n      this.emotionRecord?.emotion?.id\n    );\n    this.copyFromInputEmotionRecordToForm();\n\n    this.setFormControlValueForObservable(\n      this.triggers$,\n      'trigger',\n      (trigger: Trigger) => trigger.triggerId,\n      this.emotionRecord?.triggers[0]?.triggerId\n    );\n\n    this.emotionForm.controls['intensity'].setValue(this.emotionRecord?.intensity);\n  }\n\n  private updateEmotionCache() {\n    const emotionCacheSubscription = this.emotionService.getEmotionCache().subscribe({\n      next: (emotionCache) => {\n        this.emotionCacheService.updateEmotionCache(emotionCache);\n      },\n      error: (error) => {\n        console.error('Error fetching emotion cache:', error);\n        this.isLoadingEmotionCache = false;\n        this.snackBar.open('Failed to fetch emotion cache', 'Close', {});\n      },\n      complete: () => {\n        console.log('Emotion cache fetch completed');\n        this.isLoadingEmotionCache = false;\n      }\n    });\n    this.subscriptions.push(emotionCacheSubscription);\n  }\n\n  convertEmotionFromDataToEmotionRecord(emotionFromData: any, inputEmotionRecord: EmotionRecord): EmotionRecord {\n    return {\n      id: inputEmotionRecord.id,\n      emotionType: emotionFromData.emotionType,\n      userId: inputEmotionRecord.userId,\n      emotion: {\n        id: emotionFromData.emotion.emotion.id,\n      },\n      intensity: emotionFromData.intensity,\n      subEmotions: [],\n      subEmotionId: emotionFromData.subEmotion?.subEmotionId,\n      triggers: [],\n      triggerId: emotionFromData.trigger?.triggerId,\n      notes: [],\n      tags: emotionFromData.tags,\n    }\n  }\n\n  async onSubmit(): Promise<void> {\n    console.log('Submitting emotion record: ', this.isSavingEmotionRecord);\n    if (this.emotionForm.valid) {\n      const emotionFromData = this.emotionForm.value;\n      const emotionRecord = this.convertEmotionFromDataToEmotionRecord(emotionFromData,\n        this.emotionRecord!);\n      console.log(`Emotion record to be updated: ${JSON.stringify(emotionRecord)}`);\n      try {\n        this.isSavingEmotionRecord = true;\n        const updateEmotionRecordSubscription = from(this.emotionService.updateEmotionRecord(emotionRecord)).\n        subscribe(\n          {\n            next: (response) => {\n              console.log('Emotion record updated successfully', response);\n              this.emotionStateService.updateNewEmotion(response);\n              this.isSavingEmotionRecord = false;\n              this.isSavingEmotionRecord = false;\n              this.dialogRef.close();\n              this.snackBar.open('Updated the note with emotion details', 'Close', {\n                duration: 5000,\n                panelClass: ['error-snackbar']\n              });\n            },\n            error: (error) => {\n              console.error('Error updating emotion record', error);\n              this.isSavingEmotionRecord = false;\n              this.snackBar.open('Failed to update the emotion record', 'Close', {\n                duration: 5000,\n                panelClass: ['error-snackbar']\n              });\n            }\n          }\n        )\n        this.subscriptions.push(updateEmotionRecordSubscription);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n\n  private setFormControlValueForObservable<T>(\n    items: Observable<T[]> | undefined,\n    controlName: string,\n    keyExtractor: (item: T) => any,\n    keyToCompare: any\n  ): void {\n    if (items == null) {\n      console.error(controlName + \", Items to select are null\");\n      return;\n    }\n    items.subscribe((items) => {\n      const itemToSelect = items.find(item => keyExtractor(item) === keyToCompare);\n      if (itemToSelect == null) {\n        console.error(controlName + \", Item not found for key\", keyToCompare);\n      } else {\n        console.log('Item found', itemToSelect);\n      }\n      this.emotionForm.controls[controlName].setValue(itemToSelect);\n    });\n  }\n\n  ngOnDestroy(): void {\n    console.log('Destroying emotion-analyzer component');\n    this.subscriptions.forEach(subscription => {\n      if (subscription) {\n        subscription.unsubscribe();\n      }\n    });\n  }\n\n  private copyFromInputEmotionRecordToForm() {\n    const existingDetectionResult: EmotionFromNoteResult = {\n      emotionDetection: {\n        emotionType: this.emotionRecord?.emotionType!,\n        intensity: this.emotionRecord?.intensity!,\n        mainEmotionId: this.emotionRecord?.emotion?.id,\n        subEmotionId: this.emotionRecord?.subEmotions[0]?.subEmotionId,\n        triggers: this.emotionRecord?.triggers!,\n        tags: [],\n        todos: [],\n        textTitle: '',\n        description: '',\n        suggestion: '',\n      },\n      note: {\n        text: '',\n      }\n    }\n    this.setSelectOptionsForEditAccordingToExistingValues(existingDetectionResult);\n  }\n\n  onCancel(): void {\n    this.emotionForm.reset();\n    this.dialogRef.close();\n  }\n\n  private setSelectOptionsForEditAccordingToExistingValues(emotionFromResult: EmotionFromNoteResult) {\n    this.emotionTypeOptions?.changes?.subscribe((options: QueryList<MatOption>) => {\n      const itemToSelect = this.emotionTypeOptions.find(option => {\n          return option.value === emotionFromResult.emotionDetection?.emotionType;\n        }\n      );\n      if (itemToSelect) {\n        Promise.resolve().then(() => itemToSelect.select());\n        console.log('Emotion type selected', itemToSelect);\n      } else {\n        console.warn(`Associated emotion type ${emotionFromResult.emotionDetection?.emotionType} not found in the list of emotion types.`);\n      }\n    });\n\n    this.emotionOptions?.changes?.subscribe((options: QueryList<MatOption>) => {\n        const itemToSelect = this.emotionOptions.find(option => {\n            return option.value.emotion.id === emotionFromResult.emotionDetection?.mainEmotionId;\n          }\n        );\n        if (itemToSelect) {\n          Promise.resolve().then(() => itemToSelect.select());\n          console.log('Emotion selected', itemToSelect);\n        } else {\n          console.warn(`Associated emotion id ${emotionFromResult.emotionDetection?.mainEmotionId} not found in the list of emotions.`);\n        }\n      }\n    );\n\n    this.subEmotionOptions?.changes?.subscribe((options: QueryList<MatOption>) => {\n        const itemToSelect = this.subEmotionOptions.find(option => {\n            return option.value.subEmotionName === emotionFromResult.emotionDetection?.subEmotionId;\n          }\n        );\n        if (itemToSelect) {\n          Promise.resolve().then(() => itemToSelect.select());\n          console.log('Sub emotion selected', itemToSelect);\n        } else {\n          console.warn(`Associated sub-emotion id ${emotionFromResult.emotionDetection?.subEmotionId} not found in the list of sub-emotions.`);\n        }\n      }\n    );\n\n    this.triggerOptions?.changes?.subscribe((options: QueryList<MatOption>) => {\n        const itemToSelect = this.triggerOptions.find(option => {\n            return option.value.triggerId === emotionFromResult.emotionDetection?.triggers[0]?.triggerId;\n          }\n        );\n        if (itemToSelect) {\n          Promise.resolve().then(() => itemToSelect.select());\n          console.log('Trigger selected', itemToSelect);\n        } else {\n          console.warn(`Associated trigger ${emotionFromResult.emotionDetection?.triggers[0]?.triggerId} not found in the list of triggers.`);\n        }\n      }\n    );\n  }\n\n  getEmotionTypes(): Observable<string[]> {\n    return this.emotionCacheService.emotionCache$.pipe(\n      map((cachedEmotionData) => {\n          if (cachedEmotionData) {\n            return cachedEmotionData.emotionTypes.map(emotionTypeObject => emotionTypeObject.emotionType);\n          } else {\n            return [];\n          }\n        }\n      ));\n  }\n\n  private getMainEmotions(): Observable<EmotionWithSubEmotions[]> | undefined {\n    return this.emotionForm.get('emotionType')?.valueChanges.pipe(\n      switchMap((selectedEmotionType) =>\n        this.emotionCacheService.emotionCache$.pipe(\n          map((cachedEmotionData) => {\n            if (cachedEmotionData && selectedEmotionType) {\n              const emotionTypeObject = cachedEmotionData.emotionTypes.find(\n                emotionTypeObject => emotionTypeObject.emotionType === selectedEmotionType\n              );\n              return emotionTypeObject ? emotionTypeObject.emotions : [];\n            } else {\n              return [];\n            }\n          })\n        )\n      )\n    );\n  }\n\n  getSubEmotions(): Observable<SubEmotionWrapper[]> | undefined {\n    return this.emotionForm.get('emotion')?.valueChanges.pipe(\n      switchMap((selectedEmotion) => {\n          if (selectedEmotion) {\n            return of(selectedEmotion.subEmotions);\n          } else {\n            return of([] as SubEmotionWrapper[]);\n          }\n        }\n      )\n    );\n  }\n\n  private getTriggers(): Observable<Trigger[]> | undefined {\n    return this.emotionForm.get('emotion')?.valueChanges.pipe(\n      switchMap((selectedEmotion) => {\n          return this.emotionCacheService.emotionCache$.pipe(\n            map((cachedEmotionData) => {\n              if (cachedEmotionData && selectedEmotion) {\n                return cachedEmotionData.triggers;\n              } else {\n                return [];\n              }\n            })\n          );\n        }\n      )\n    );\n  }\n}\n","<div class=\"emotion-analyzer\">\n  <form [formGroup]=\"emotionForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>Manual Emotion Input</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <mat-form-field>\n          <mat-label>Emotion Category</mat-label>\n          <mat-select formControlName=\"emotionType\">\n            <mat-option #emotionTypeOptions *ngFor=\"let emotionType of emotionTypes$ | async\"\n                        [value]=\"emotionType\">{{ emotionType }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <div class=\"intensity-container\">\n          <label class=\"intensity-label\">Emotion Intensity</label>\n          <mat-slider\n            discrete\n            showTickMarks\n            min=\"0\"\n            max=\"5\"\n            step=\"1\"\n            [color]=\"emotionForm.get('emotionType') ? this.colorService.getSliderColorThemePalette(\n            emotionForm.get('emotionType')?.value) : undefined\"\n          >\n            <input matSliderThumb formControlName=\"intensity\">\n          </mat-slider>\n        </div>\n        <mat-form-field>\n          <mat-label>Main Emotion</mat-label>\n\n          <mat-select formControlName=\"emotion\">\n            <mat-option #emotionOptions *ngFor=\"let emotionWithSubEmotion of mainEmotions$ | async\"\n                        [value]=\"emotionWithSubEmotion\">{{ emotionWithSubEmotion.emotion.emotionName }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Associated Emotion</mat-label>\n          <mat-select formControlName=\"subEmotion\">\n            <mat-option #subEmotionOptions *ngFor=\"let subEmotion of subEmotions$ | async\"\n                        [value]=\"subEmotion.subEmotion\">{{ subEmotion.subEmotion.subEmotionName }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Reason</mat-label>\n          <mat-select formControlName=\"trigger\">\n            <mat-option #triggerOptions *ngFor=\"let trigger of triggers$ | async\"\n                        [value]=\"trigger\">{{ trigger.description }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-action-row>\n          <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"emotionForm.invalid || isSavingEmotionRecord\">\n            <div class=\"button-content\">\n              <mat-spinner *ngIf=\"isSavingEmotionRecord\" diameter=\"24\"></mat-spinner>\n              <span>Save</span>\n            </div>\n          </button>\n          <button mat-button color=\"primary\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\n        </mat-action-row>\n      </mat-card-content>\n    </mat-card>\n  </form>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {MatDatepicker, MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport {getDate, getDay, getMonth, getYear, isSameDay, setMonth, setYear} from 'date-fns';\n\nimport {DayOfWeek, EmotionRecord, Week} from \"../models/emotion.model\";\nimport {EmotionService} from \"../services/emotion.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {DateService} from \"../services/date.service\";\nimport {ColorService} from \"../services/color.service\";\n\n\n@Component({\n    selector: 'app-emotion-calendar',\n    templateUrl: './emotion-calendar.component.html',\n    styleUrls: ['./emotion-calendar.component.css']\n})\nexport class EmotionCalendarComponent implements OnInit {\n    date = new Date();\n    monthRecords: EmotionRecord[] | undefined;\n    isLoadingRecords = false;\n    calendarWeeks: Week[] = [];\n\n    constructor(private emotionRecordService: EmotionService,\n                private snackBar: MatSnackBar,\n                private dateService: DateService,\n                private colorService: ColorService\n    ) {\n    }\n\n    ngOnInit() {\n        this.fetchRecords(this.date);\n    }\n\n    fetchRecords(month: Date) {\n        this.isLoadingRecords = true;\n        this.emotionRecordService.fetchMonthEmotionRecordsForCurrentUser(month).subscribe({\n            next: records => {\n                this.monthRecords = records;\n                this.buildCalendar(this.date);\n            },\n            error: err => {\n                console.error(err);\n                this.isLoadingRecords = false;\n                this.snackBar.open('Error getting emotion record data for calendar', 'Close', {\n                    duration: 5000,\n                });\n            },\n            complete: () => {\n                this.isLoadingRecords = false;\n                console.log('Fetching of records completed');\n            }\n        });\n    }\n\n    monthSelected(event: MatDatepickerInputEvent<Date>) {\n        if (event.value !== null) {\n            this.date = event.value;\n        }\n        this.fetchRecords(this.date);\n    }\n\n    buildCalendar(date: Date) {\n        const year = getYear(date);\n        const month = getMonth(date);\n\n        const firstDayOfMonth = new Date(year, month, 1);\n        const lastDayOfMonth = new Date(year, month + 1, 0);\n\n        const weeks: Week[] = [];\n        let week: DayOfWeek[] = [];\n\n        // Padding for days before the start of the month\n        for (let i = 0; i < getDay(firstDayOfMonth); i++) {\n            week.push({\n                date: 0,\n                records: [],\n                averageIntensity: 0,\n                dayColor: 'white'\n            });\n        }\n\n        for (let day = 1; day <= getDate(lastDayOfMonth); day++) {\n            const date = new Date(year, month, day);\n\n            const dayRecord: DayOfWeek = this.findDayRecord(date, this.monthRecords);\n\n            week.push(dayRecord);\n\n            if (getDay(date) === 6 || day === getDate(lastDayOfMonth)) {\n                // The week is over, or this is the end of the month\n                weeks.push({\n                    days: week\n                });\n                week = [];\n            }\n        }\n\n        this.calendarWeeks = weeks;\n    }\n\n    findDayRecord(date: Date, monthRecords: EmotionRecord[] | undefined): DayOfWeek {\n        const day = getDate(date);\n        const month = getMonth(date);\n        const year = getYear(date);\n\n        if (monthRecords) {\n            const dayRecords = monthRecords.filter(dayRecord => {\n                const currentDay = new Date(year, month, day);\n                return isSameDay(new Date(this.dateService.formatDateFromDb(dayRecord.created!)), currentDay);\n            });\n\n            if (dayRecords.length > 0) {\n                const emotionSums = this.calculateIntensityPerEmotion(dayRecords);\n                const averageIntensitiesPerType: { emotionType: string, averageIntensity: number }[] =\n                    this.calculateAverageIntensityPerEmotion(emotionSums);\n                const averageIntensity = averageIntensitiesPerType.length > 0 ?\n                    averageIntensitiesPerType.reduce((sum, {averageIntensity}) => sum + averageIntensity, 0) / averageIntensitiesPerType.length : 0;\n\n                const sortedEmotionSums = this.sortEmotionsSums(emotionSums);\n                console.log(\"sortedEmotionSums for: \" + dayRecords[0].created, sortedEmotionSums);\n                let emotionType = sortedEmotionSums.length > 0 ? sortedEmotionSums[0].emotionType : 'Empty';\n\n                return {\n                    date: day,\n                    dateTime: date,\n                    records: dayRecords,\n                    averageIntensity: averageIntensity,\n                    dayColor: this.colorService.getColorForEmotionType(emotionType, dayRecords.length > 0)\n                };\n            }\n        }\n\n        return {\n            date: day,\n            records: [],\n            averageIntensity: 0,\n            dayColor: this.colorService.getColorForEmotionType('', false)\n        };\n    }\n\n    calculateIntensityPerEmotion(records: EmotionRecord[]): { [key: string]: { sum: number, count: number } } {\n        let emotionSums: { [key: string]: { sum: number, count: number } } = {};\n\n        records.forEach(record => {\n            if (!emotionSums[record.emotionType]) {\n                emotionSums[record.emotionType] = {sum: 0, count: 0};\n            }\n            emotionSums[record.emotionType].sum += record.intensity;\n            emotionSums[record.emotionType].count++;\n        });\n\n        return emotionSums;\n    }\n\n\n    calculateAverageIntensityPerEmotion(emotionSums: { [key: string]: { sum: number, count: number } }): { emotionType: string, averageIntensity: number }[] {\n        return Object.entries(emotionSums).map(([emotionType, {sum, count}]) => ({\n            emotionType,\n            averageIntensity: sum / count\n        }));\n    }\n\n    sortEmotionsSums(emotionSums: { [key: string]: { sum: number, count: number } }): { emotionType: string, sum: number, count: number }[] {\n        return Object.entries(emotionSums).map(([emotionType, {sum, count}]) => ({\n            emotionType,\n            sum,\n            count\n        })).sort((a, b) => b.sum - a.sum || b.count - a.count);\n    }\n\n\n    chosenYearHandler(normalizedYear: Date) {\n        this.date = setYear(this.date, getYear(normalizedYear));\n    }\n\n    chosenMonthHandler(normalizedMonth: Date, datepicker: MatDatepicker<Date>) {\n        this.date = setMonth(this.date, getMonth(normalizedMonth));\n        datepicker.close();\n        this.fetchRecords(normalizedMonth)\n    }\n}\n","<div *ngIf=\"isLoadingRecords\" class=\"loading-screen\">\n  <mat-spinner diameter=\"48\"></mat-spinner>\n  <h2>Loading...</h2>\n</div>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Choose a month</mat-label>\n  <input matInput [matDatepicker]=\"picker\" (dateChange)=\"monthSelected($event)\" [value]=\"date\">\n  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-datepicker #picker startView=\"multi-year\" (yearSelected)=\"chosenYearHandler($event)\" (monthSelected)=\"chosenMonthHandler($event, picker)\" panelClass=\"example-month-picker\">\n  </mat-datepicker>\n</mat-form-field>\n<h2>{{ date | date: 'MMMM yyyy' }}</h2>\n<div class=\"calendar\">\n  <mat-grid-list cols=\"7\" rowHeight=\"100px\">\n    <!-- Weekday names -->\n    <div class=\"weekdays\">\n      <div class=\"weekday\" *ngFor=\"let day of ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\">{{ day }}</div>\n    </div>\n    <!-- Calendar -->\n    <ng-container *ngFor=\"let week of calendarWeeks\">\n      <mat-grid-tile *ngFor=\"let day of week.days\">\n        <app-day [day]=\"day\"></app-day>\n      </mat-grid-tile>\n    </ng-container>\n  </mat-grid-list>\n</div>\n","import {Component, OnInit, ViewChild, AfterViewInit, ChangeDetectorRef} from '@angular/core';\nimport {EmotionService} from '../services/emotion.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {Router} from '@angular/router';\nimport {EmotionStateService} from '../services/emotion-state.service';\nimport {MatSort} from \"@angular/material/sort\";\nimport {EmotionRecord} from \"../models/emotion.model\";\nimport {MatSnackBar, MatSnackBarRef, SimpleSnackBar} from \"@angular/material/snack-bar\";\nimport {Observable} from \"rxjs\";\n\n\n@Component({\n    selector: 'app-emotions-timeline',\n    templateUrl: './emotions-timeline.component.html',\n    styleUrls: ['./emotions-timeline.component.css'],\n})\nexport class EmotionsTimelineComponent implements OnInit, AfterViewInit {\n    displayedColumns: string[] = [\n        'date',\n        'intensity',\n        'subEmotion',\n        'noteTitle',\n        'actions'\n    ];\n    dataSource: MatTableDataSource<EmotionRecord>;\n\n    snackBarRef: MatSnackBarRef<SimpleSnackBar> | null = null;\n\n    @ViewChild(MatPaginator, {static: false}) paginator!: MatPaginator;\n\n    @ViewChild(MatSort) sort!: MatSort;\n\n    isLoading: boolean = true;\n\n    snackBarDuration = 10000;\n\n    constructor(\n        private emotionService: EmotionService,\n        private router: Router,\n        private emotionStateService: EmotionStateService,\n        private changeDetector: ChangeDetectorRef,\n        private snackBar: MatSnackBar\n    ) {\n        this.dataSource = new MatTableDataSource();\n    }\n\n    ngOnInit(): void {\n        this.emotionService.fetchEmotionRecordsForCurrentUser().subscribe((data) => {\n            this.dataSource.data = data;\n            this.dataSource.paginator = this.paginator;\n            this.isLoading = false;\n        });\n    }\n\n    ngAfterViewInit(): void {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.dataSource.sort.active = 'date';\n        this.dataSource.sort.direction = 'desc';\n        this.dataSource.sortingDataAccessor = (data, sortHeaderId) => {\n            switch (sortHeaderId) {\n                case 'date':\n                    return this.getDateForSorting(data);\n                case 'subEmotion':\n                    return data.subEmotions[0]?.subEmotionName || '';\n                case 'noteTitle':\n                    return data.notes[0]?.title || '';\n                case 'intensity':\n                    return data.intensity;\n                default:\n                    return this.getDateForSorting(data);\n            }\n        };\n        this.changeDetector.detectChanges();\n    }\n\n    refresh(): Observable<EmotionRecord[]> {\n        const refreshedEmotionRecords$ = this.emotionService.fetchEmotionRecordsForCurrentUser()\n        refreshedEmotionRecords$.subscribe((data) => {\n            this.dataSource.data = data;\n            this.changeDetector.detectChanges();\n        });\n        return refreshedEmotionRecords$;\n    }\n\n    onRowClicked(record: any): void {\n        this.emotionStateService.updateNewEmotion(record); // Save the selected emotion record in the state\n        this.router.navigate(['/display-emotion']);\n    }\n\n    getDateForSorting(data: any): number {\n        return new Date(data.created).getTime();\n    }\n\n    onDelete(record: EmotionRecord): void {\n      this.snackBar.open(`Deleting emotion record: ${record.notes[0]?.title}`, 'Close', {\n        duration: this.snackBarDuration,\n      })\n        record.isDeleted = true;\n        this.emotionService.updateEmotionRecord(record).subscribe({\n                next: record => {\n                    this.refresh().subscribe(\n                        () => {\n                          this.snackBarRef = this.snackBar.open(`Emotion record deleted: ${record.notes[0]?.title}`, 'Undo', {\n                            duration: this.snackBarDuration,\n                          });\n                          this.snackBarRef.onAction().subscribe(() => {\n                            record.isDeleted = false;\n                            this.emotionService.updateEmotionRecord(record).subscribe({\n                              next: record => {\n                                this.refresh().subscribe(\n                                    () => {\n                                        this.snackBar.open(`Emotion record restored: ${record.notes[0]?.title}`, 'Close', {\n                                        duration: this.snackBarDuration,\n                                        });\n                                    }\n                                )\n                              },\n                              error: err => this.handleError(err, `Failed to undo delete for emotion record: ${record.notes[0]?.title}`)\n                            });\n                          });\n                          this.snackBarRef.afterDismissed().subscribe(info => {\n                            if (!info.dismissedByAction) {\n                              this.emotionService.deleteEmotionRecord(record).subscribe({\n                                next: record => {\n                                  this.refresh();\n                                },\n                                error: err => this.handleError(err, `Failed to delete emotion record: ${record.notes[0].title}`)\n                              });\n                            }\n                          });\n                        }\n                    );\n                },\n                error: err => this.handleError(err, `Failed to delete emotion record: ${record.notes[0].title}`)\n            }\n        );\n    }\n\n\n\n\n\n    private handleError(err: any, s: string) {\n        console.log(s);\n        this.snackBar.open(s, 'Close', {\n            duration: this.snackBarDuration,\n        });\n    }\n\n    protected readonly alert = alert;\n}\n","<div *ngIf=\"isLoading\" class=\"page-loading\">\n  <mat-spinner diameter=\"48\"></mat-spinner>\n  <h2>Loading...</h2>\n</div>\n<table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"date\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Date</th>\n    <td mat-cell *matCellDef=\"let record\"> {{ record.created | date: 'medium' }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"intensity\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Intensity</th>\n    <td mat-cell *matCellDef=\"let record\">\n      <mat-progress-bar mode=\"determinate\" [value]=\"record.intensity * 20\"\n                        [color]=\"record.emotionType === 'Positive' ? 'primary' : record.emotionType === 'Neutral'||\n                             record.emotionType === 'Unknown'? 'accent' : 'warn'\"\n                        [title]=\"'Intensity: ' + record.intensity\">\n      </mat-progress-bar>\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"subEmotion\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Sub-Emotion</th>\n    <td mat-cell *matCellDef=\"let record\"> {{ record.subEmotions[0]?.subEmotionName }}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"noteTitle\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> Note Title</th>\n    <td mat-cell *matCellDef=\"let record\"> {{ record.notes && record.notes.length > 0 ? record.notes[0].title : '' }}\n    </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef> Actions</th>\n    <td mat-cell *matCellDef=\"let record\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" (click)=\"$event.stopPropagation()\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"onDelete(record)\">\n          <mat-icon>delete</mat-icon>\n          <span>Delete</span>\n        </button>\n      </mat-menu>\n    </td>\n  </ng-container>\n\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\n      (click)=\"onRowClicked(row)\"\n      (mouseover)=\"row.hover = true\"\n      (mouseleave)=\"row.hover = false\"\n      [ngClass]=\"{'hovered-row': row.hover}\">\n  </tr>\n</table>\n\n<mat-paginator [pageSizeOptions]=\"[10, 20, 50, 200]\"></mat-paginator>\n\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent {\n  title = 'Welcome to the Landing Page!';\n\n  changeTitle() {\n    this.title = 'Welcome to the Updated Landing Page!';\n  }\n}\n","<main class=\"gradient-background\">\n  <section class=\"value-proposition\">\n    <h1 class=\"value-proposition-title\">Empower your emotional well-being!</h1>\n    <p class=\"value-proposition-subtitle\">Track, understand, and manage your emotions with our comprehensive tool.</p>\n  </section>\n\n  <section class=\"benefits\">\n    <mat-card class=\"benefit-card\">\n      <mat-card-header>\n        <mat-card-title>Track Your Emotions</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <p>Identify and track emotions, sub-emotions, and triggers to gain a deeper understanding of your emotional landscape.</p>\n      </mat-card-content>\n    </mat-card>\n    <mat-card class=\"benefit-card\">\n      <mat-card-header>\n        <mat-card-title>Contextualize Your Emotions</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <p>Add notes and context to your emotions and triggers, helping you to analyze and understand your emotional patterns over time.</p>\n      </mat-card-content>\n    </mat-card>\n    <mat-card class=\"benefit-card\">\n      <mat-card-header>\n        <mat-card-title>Receive Personalized Suggestions</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <p>Get actionable suggestions based on your emotional input, empowering you to take proactive steps towards emotional well-being and personal growth.</p>\n      </mat-card-content>\n    </mat-card>\n  </section>\n  <section class=\"call-to-action\">\n    <mat-card class=\"cta-card\">\n      <mat-card-header>\n        <mat-card-title>Start your emotional wellness journey today!</mat-card-title>\n      </mat-card-header>\n      <mat-card-content>\n        <button mat-raised-button color=\"accent\" routerLink=\"/login\">Login</button>\n        <button mat-button color=\"primary\" routerLink=\"/signup\">Sign up</button>\n      </mat-card-content>\n    </mat-card>\n  </section>\n</main>\n\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {Router} from \"@angular/router\";\nimport {AuthService} from \"../services/auth.service\";\nimport { lastValueFrom } from 'rxjs';\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n\n  constructor(private authService: AuthService,\n              private fb: FormBuilder,\n              private router: Router,\n              private snackBar: MatSnackBar\n  ) {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  async onSubmit() {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value;\n      try {\n        const response = await lastValueFrom(this.authService.login(username, password));\n        // Store the JWT token in localStorage or another secure place\n        localStorage.setItem('auth_token', response.token);\n\n        // Redirect the user to the main app or another desired route\n        this.router.navigate(['/create-emotion']);\n      } catch (error) {\n        // Handle any errors from the API, such as incorrect credentials\n        console.error('Login failed:', error);\n        this.snackBar.open('Login failed', 'Close', {\n          duration: 5000,\n          panelClass: ['error-snackbar']\n        });\n      }\n    }\n  }\n}\n","<div class=\"login-container\">\n  <mat-card class=\"login-card\">\n    <mat-card-header>\n      <mat-card-title>Login</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n          <mat-label>Username</mat-label>\n          <input matInput formControlName=\"username\" type=\"text\" placeholder=\"Username\">\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n          <mat-label>Password</mat-label>\n          <input matInput formControlName=\"password\" type=\"password\" placeholder=\"Password\">\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\" type=\"submit\">Login</button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n  <p>Don't have an account? <a routerLink=\"/signup\">Sign up</a></p>\n</div>\n","import {AfterViewInit, ChangeDetectorRef, Component, ViewChild} from '@angular/core';\nimport {Observable, Subscription} from \"rxjs\";\nimport {AuthService} from \"../services/auth.service\";\nimport {MatSidenav} from \"@angular/material/sidenav\";\nimport {BreakpointObserver, Breakpoints} from \"@angular/cdk/layout\";\nimport {Router} from \"@angular/router\";\nimport {MatToolbar} from \"@angular/material/toolbar\";\nimport { Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.css', './main-layout-background.css']\n})\nexport class MainLayoutComponent implements AfterViewInit {\n  @ViewChild('sidenav', { static: false }) sidenav!: MatSidenav;\n    @ViewChild('footer', { static: false }) footer!: MatToolbar;\n  @ViewChild('header', { static: false }) header!: MatToolbar;\n  public isAuthenticated!: Observable<boolean>;\n  screenWidth!: number;\n  resizeSubscription!: Subscription;\n  isMobile: boolean = false;\n  lastScrollTop = 0;\n  isHeaderVisible = true;\n  currentUserName: string = '';\n\n  constructor(public authService: AuthService, private breakpointObserver: BreakpointObserver,\n              private router: Router, private renderer: Renderer2, private cdRef: ChangeDetectorRef) {\n    this.isAuthenticated = this.authService.isAuthenticated;\n  }\n\n  ngOnInit(): void {\n    window.addEventListener('scroll', this.handleScroll.bind(this));\n  }\n\n\n  ngAfterViewInit(): void {\n    this.hideHeaderOnScroll(); // This should ensure header is available when called\n\n    this.resizeSubscription = this.breakpointObserver\n        .observe([Breakpoints.Small, Breakpoints.HandsetPortrait])\n        .subscribe((state) => {\n          if (state.matches) {\n            this.isMobile = true;\n            if (this.sidenav) {\n              this.sidenav.close();\n            }\n            if (this.footer) {\n              this.renderer.setStyle(this.footer._elementRef.nativeElement, 'display', 'none');\n            }\n          } else {\n            this.isMobile = false;\n            if (this.sidenav) {\n              this.sidenav.open();\n            }\n            if (this.footer) {\n              this.renderer.setStyle(this.footer._elementRef.nativeElement, 'display', 'block');\n            }\n            if (this.header) {\n              this.renderer.setStyle(this.header._elementRef.nativeElement, 'display', 'block');\n            }\n          }\n        });\n\n    this.cdRef.detectChanges();\n  }\n\n\n\n  handleScroll() {\n    const currentScrollTop = window.scrollY;\n\n    // Scrolling down\n    if (currentScrollTop > this.lastScrollTop) {\n      this.isHeaderVisible = false;\n      if (this.isMobile) {\n        this.renderer.setStyle(this.header._elementRef.nativeElement, 'display', 'none'); // Adjusted line\n      }\n    }\n    // Scrolling up or reaching the top of the page\n    else {\n      this.isHeaderVisible = true;\n      if (this.isMobile) {\n        this.renderer.setStyle(this.header._elementRef.nativeElement, 'display', 'block'); // Adjusted line\n      }\n    }\n\n    this.lastScrollTop = currentScrollTop;\n  }\n\n\n  hideHeaderOnScroll(): void {\n    if (this.header && this.isMobile) { // Check if header exists before proceeding\n      let lastScrollTop = 0;\n      document.addEventListener('scroll', () => {\n        const currentScrollTop = window.scrollY || document.documentElement.scrollTop;\n        if (currentScrollTop === 0 || currentScrollTop < lastScrollTop) {\n          this.renderer.setStyle(this.header._elementRef.nativeElement, 'display', 'block');\n        } else {\n          this.renderer.setStyle(this.header._elementRef.nativeElement, 'display', 'none');\n        }\n        lastScrollTop = currentScrollTop;\n      });\n    }\n  }\n\n\n\n\n  ngOnDestroy(): void {\n    this.resizeSubscription.unsubscribe();\n  }\n\n  logout() {\n    this.authService.logout().subscribe(() => {\n      console.log('User logged out successfully');\n      this.router.navigate(['login']).then(r => console.log(r));\n    });\n  }\n}\n","<mat-toolbar color=\"primary\" #header *ngIf=\"isHeaderVisible\">\n  <mat-toolbar-row>\n    <button *ngIf=\"(isAuthenticated | async) === true\" mat-icon-button (click)=\"sidenav.toggle()\" class=\"menu-button\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <a [routerLink]=\"(isAuthenticated | async) ? '/landing' : '/'\" class=\"app-name\">Emotion Signals</a>\n    <span class=\"spacer\"></span>\n    <div *ngIf=\"(isAuthenticated | async) === false\" class=\"button-container\">\n      <button mat-stroked-button color=\"accent\" routerLink=\"/login\">Login</button>\n      <button mat-raised-button color=\"primary\" routerLink=\"/signup\">Sign up</button>\n    </div>\n    <span *ngIf=\"(isAuthenticated | async) === true\" class=\"current-user-name\">{{this.authService.fetchDecodedToken().username}}</span>\n    <button *ngIf=\"(isAuthenticated | async) === true\" mat-stroked-button color=\"accent\" (click)=\"logout()\">Sign out</button>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #sidenav mode=\"side\" appScreenSize opened=\"true\" *ngIf=\"(isAuthenticated | async) === true\" class=\"sidenav\">\n  <app-navigation></app-navigation>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div class=\"content\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n<mat-toolbar color=\"primary\" class=\"footer\" #footer>\n  <mat-toolbar-row>\n    <!-- Add relevant links and contact information here -->\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Component } from '@angular/core';\nimport { MatListModule } from '@angular/material/list';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent {\n\n}\n","<mat-nav-list>\n  <a mat-list-item routerLink=\"/create-emotion\" routerLinkActive=\"active\">Create Note</a>\n  <a mat-list-item routerLink=\"/emotions-timeline\" routerLinkActive=\"active\">Timeline</a>\n  <a mat-list-item routerLink=\"/todos\" routerLinkActive=\"active\">Todos</a>\n  <a mat-list-item routerLink=\"/emotions-calendar\" routerLinkActive=\"active\">Calendar</a>\n  <a mat-list-item routerLink=\"/charts\" routerLinkActive=\"active\">Charts</a>\n</mat-nav-list>\n","import {Component, Input} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {EmotionService} from \"../services/emotion.service\";\nimport {AuthService} from \"../services/auth.service\";\nimport {EmotionStateService} from \"../services/emotion-state.service\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {DateService} from \"../services/date.service\";\nimport {from} from \"rxjs\";\nimport {Emotion, EmotionRecord, Note, SubEmotion, Tag, Trigger} from \"../models/emotion.model\";\n\n@Component({\n  selector: 'app-note-form',\n  templateUrl: './note-form.component.html',\n  styleUrls: ['./note-form.component.css']\n})\nexport class NoteFormComponent {\n  @Input() emotionForm: FormGroup;\n  isSavingEmotionRecord: boolean = false;\n  maxNoteLength = 2000; // TODO: Should be fetched from the backend\n  placeHolderText: string = \"Try to describe how this emotion is affecting your daily activities or your interactions with others. Include more context or personal thoughts to convey your emotions more clearly. Are there any noticeable patterns or recurring events? How do you wish to feel instead? What steps do you think you could take to influence your emotional state? Remember, you can also use #hashtags to categorize or highlight key points in your note. To add a todo, simply enclose it in double square brackets like this: [[<your todo here>]]. \";\n  computeNoteLength(): number {\n    return this.emotionForm.get('emotionNote')?.value?.length ?? 0;\n  }\n\n\n  constructor(private fb: FormBuilder, private emotionService: EmotionService,\n              private authService: AuthService,\n              private router: Router,\n              private snackBar: MatSnackBar,\n              private emotionStateService: EmotionStateService,\n              private dateService: DateService) {\n    this.emotionForm = this.fb.group({\n      emotionDate: [new Date()],\n      emotionNote: [''],\n      textTitle: [''],\n      emotionTime: [''],\n    });\n  }\n\n  async onSubmit(): Promise<void> {\n    console.log('Submitting emotion record: ', this.isSavingEmotionRecord);\n    if (this.emotionForm.valid) {\n      const emotionFromData = this.emotionForm.value;\n      const emotionRecord = this.convertEmotionFromDataToEmotionRecord(emotionFromData);\n      console.log(`Emotion record to be inserted: ${JSON.stringify(emotionRecord)}`);\n      try {\n        this.isSavingEmotionRecord = true;\n        from(this.emotionService.insertEmotionRecord(emotionRecord)).subscribe(\n          {\n            next: (response) => {\n              console.log('Emotion record inserted successfully', response);\n              this.emotionStateService.updateNewEmotion(response);\n              this.isSavingEmotionRecord = false;\n              this.router.navigate(['/display-emotion']);\n            },\n            error: (error) => {\n              console.error('Error inserting emotion record', error);\n              this.isSavingEmotionRecord = false;\n              this.snackBar.open('Failed to submit the emotion record', 'Close', {\n                duration: 5000,\n                panelClass: ['error-snackbar']\n              });\n            }\n          }\n        )\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n\n  convertEmotionFromDataToEmotionRecord(emotionFromData: any): EmotionRecord {\n    const decodedToken = this.authService.fetchDecodedToken();\n    let emotion: any = null;\n    if (emotionFromData.emotion?.emotion?.id) {\n      emotion = {};\n      emotion.id = emotionFromData.emotion.emotion.id;\n    }\n\n    const notes: any[] = [];\n    if (emotionFromData.emotionNote) {\n      const note: Note = {\n        text: emotionFromData.emotionNote,\n        title: emotionFromData.textTitle,\n        description: emotionFromData.description,\n        suggestion: emotionFromData.suggestion,\n        todos: emotionFromData.todos\n      }\n      notes.push(note);\n    }\n\n    return {\n      userId: decodedToken.userId,\n      emotionType: \"Unknown\",\n      intensity: 0,\n      emotion: emotion as Emotion,\n      subEmotions: [] as SubEmotion[],\n      triggers: [] as Trigger[],\n      notes: notes as Note[],\n      tags: [] as Tag[],\n      created: this.dateService.formatDateToIsoString(emotionFromData.emotionDate)\n    };\n  }\n}\n","<div class=\"note-from\">\n  <form [formGroup]=\"emotionForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"note-field-wrapper\">\n      <app-custom-date-picker formControlName=\"emotionDate\"></app-custom-date-picker>\n      <label for=\"note\">Add a note (max {{ maxNoteLength }} chars):</label>\n      <mat-form-field appearance=\"outline\" class=\"full-width\">\n        <mat-label>Note</mat-label>\n        <textarea id=\"note\" matInput formControlName=\"emotionNote\" rows=\"4\" [maxlength]=\"maxNoteLength\"\n                  [placeholder]=\"placeHolderText\"></textarea>\n        <mat-hint align=\"end\">{{ computeNoteLength() }}/{{ maxNoteLength }}\n        </mat-hint>\n      </mat-form-field>\n    </div>\n    <mat-action-row>\n      <button mat-raised-button color=\"primary\" type=\"submit\"\n              [disabled]=\"emotionForm.invalid || isSavingEmotionRecord\">\n        <mat-spinner *ngIf=\"isSavingEmotionRecord\" diameter=\"24\"></mat-spinner>\n        <span>Save</span>\n      </button>\n    </mat-action-row>\n  </form>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {NoteTodo} from '../models/emotion.model';\nimport {NoteTodoService} from \"../services/note-todo.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {catchError} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\n\n@Component({\n  selector: 'app-note-todo',\n  templateUrl: './note-todo.component.html',\n  styleUrls: ['./note-todo.component.css']\n})\nexport class NoteTodoComponent {\n  @Input() noteTodo: NoteTodo | null = null;\n  isSavingStatus: boolean = false\n\n  constructor(private noteTodoService: NoteTodoService, private snackBar: MatSnackBar) {\n\n  }\n\n    acceptTodo(): void {\n        if (this.noteTodo != null) {\n            this.isSavingStatus = true;\n            console.log('Accepting todo', this.noteTodo);\n            this.noteTodoService.updateNoteTodoToAccepted({\n                id: this.noteTodo.id!,\n                isAccepted: true\n            }).pipe(\n                catchError((error) => {\n                    console.error('Error updating NoteTodo:', error);\n                    this.isSavingStatus = false;\n                    this.snackBar.open('An error occurred while updating the todo', 'Close', {\n                        panelClass: 'snackbar-error',\n                        duration: 2000,\n                    });\n                    return of(null);\n                })\n            ).subscribe((success) => {\n                if (success) {\n                    console.log('Todo accepted');\n                    this.isSavingStatus = false;\n                    this.noteTodo!.isAccepted = true;\n                    this.snackBar.open('Todo accepted', 'Close', {\n                        duration: 3000\n                    });\n                } else {\n                    console.log('Todo not accepted');\n                    this.isSavingStatus = false;\n                    this.snackBar.open('Failed to save todo status', 'Close', {\n                        duration: 3000\n                    });\n                }\n            });\n        }\n    }\n}\n","<mat-card class=\"note-todo-card\">\n  <div *ngIf=\"noteTodo\">\n    <p><strong>Title:</strong> {{ noteTodo.title }}</p>\n    <p><strong>Description:</strong> {{ noteTodo.description }}</p>\n    <p *ngIf=\"noteTodo.isAccepted; else notAcceptedBlock\"><strong>Status:</strong> Accepted</p>\n    <ng-template #notAcceptedBlock>\n      <button mat-raised-button type=\"button\" color=\"primary\" (click)=\"acceptTodo()\">\n        Accept\n        <mat-spinner *ngIf=\"isSavingStatus\" diameter=\"24\" [style.marginRight.px]=\"4\"></mat-spinner>\n      </button>\n    </ng-template>\n  </div>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard  {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.authService.isAuthenticated.pipe(\n      take(1),\n      map(isAuthenticated => {\n        // Check if the URL is the landing page\n        if (state.url === '/' || state.url === '') {\n          this.router.navigate(['/charts']);\n          if (!isAuthenticated) {\n            return true;  // Allow access to the landing page\n          }\n        }\n\n        if (isAuthenticated) {\n          return true;\n        } else {\n          // Redirect to the login page if the user is not authenticated\n          this.router.navigate(['/login']);\n          return false;\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpErrorResponse} from '@angular/common/http';\nimport { User } from '../models/emotion.model';\nimport { tap, catchError } from 'rxjs/operators';\nimport {BehaviorSubject, Observable, of, throwError} from 'rxjs';\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {environment} from \"../../environments/environment\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public isAuthenticatedSubject = new BehaviorSubject<boolean>(false);\n  public isAuthenticated: Observable<boolean> = this.isAuthenticatedSubject.asObservable();\n  jwtHelper = new JwtHelperService();\n  currentUsername: string = '';\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {\n    const token = localStorage.getItem('auth_token');\n    this.isAuthenticatedSubject.next(!!token);\n  }\n\n  signUp(user: User) {\n    return this.http.post(`${environment.baseUrl}/user`, user)\n      .pipe(\n        tap((response) => {\n          console.log('User registered successfully: ' + user, response);\n          // Navigate to the login page or display a success message\n        })\n      );\n  }\n\n  login(username: string, password: string) {\n    return this.http\n      .post<{ token: string }>(`${environment.baseUrl}/login`, { username, password })\n      .pipe(\n        tap((response) => {\n          this.isAuthenticatedSubject.next(true);\n          console.log('User logged in successfully', this.jwtHelper.decodeToken(response.token));\n          this.currentUsername = username;\n          localStorage.removeItem('auth_token');\n          localStorage.setItem('auth_token', response.token);\n        }),\n        catchError((error: HttpErrorResponse) =>\n          {\n            this.snackBar.open('Invalid username or password', 'Close', {\n              duration: 5000,\n            });\n            this.isAuthenticatedSubject.next(false);\n            return throwError(() => new Error('Invalid username or password'));\n          }\n        )\n      );\n  }\n\n  logout(): Observable<any> {\n    const username = this.fetchDecodedToken().username;\n    if (username != \"\") {\n      const headers = this.getAuthorizationHeader();\n      return this.http\n        .post<{ token: string }>(`${environment.baseUrl}/logout`, { username }, {headers})\n        .pipe(\n          tap((response) => {\n            console.log('User logged out successfully on server', this.jwtHelper.decodeToken(response.token));\n            this.currentUsername = username;\n            localStorage.removeItem('auth_token');\n            this.isAuthenticatedSubject.next(false);\n          }),\n          catchError((error: HttpErrorResponse) => {\n            console.log('User failed to logout on server', error);\n            return throwError(() => new Error('User failed to logout on server'));\n          })\n        );\n    } else {\n      // If username is empty, return an Observable that immediately completes\n      return of(null);\n    }\n  }\n\n\n  getAuthorizationHeader(): HttpHeaders {\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      return new HttpHeaders({\n        Authorization: `Bearer ${token}`,\n        \"X-IdempotencyKey\": uuidv4(),\n      });\n    } else {\n      return new HttpHeaders();\n    }\n  }\n\n  fetchDecodedToken() {\n    const encodedToken = localStorage.getItem('auth_token');\n    return this.jwtHelper.decodeToken(encodedToken!);\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {ThemePalette} from \"@angular/material/core\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorService {\n  getColorForEmotionType(emotionType: string, hasRecords: boolean) {\n    // find the emotion with the highest intensity\n\n    let color = 'grey';\n\n    // Define the colors corresponding to the Angular Material theme colors\n    const primaryColor = '#3f51b5'; // blue\n    const accentColor = '#ffb74d'; // pink\n    const warnColor = '#e57373'; // red\n    const greyColor = '#D3D3D3'; // grey\n\n    if(emotionType === 'Negative') {\n      color = warnColor;\n    } else if (emotionType === 'Positive') {\n      color = primaryColor;\n    } else if (emotionType === 'Neutral') {\n      color = accentColor;\n    }\n    else if (!hasRecords) {\n      color = greyColor;\n    }\n    return color;\n  }\n\n  getSliderColorThemePalette(emotionType: string): ThemePalette {\n    switch (emotionType) {\n      case 'Positive':\n        return 'primary';\n      case 'Neutral':\n        return 'accent';\n      case 'Negative':\n        return 'warn';\n      default:\n        return undefined;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {zonedTimeToUtc} from 'date-fns-tz';\nimport { utcToZonedTime, format } from 'date-fns-tz';\nimport {endOfMonth, startOfMonth} from \"date-fns\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n\n  constructor() {\n  }\n\n  formatDateToIsoString(date: Date): string {\n    // Get the user's time zone\n    const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    // Convert the local date to a UTC date\n    const utcDate = zonedTimeToUtc(date, timeZone);\n\n    // Format the UTC date as an ISO string including time\n    return format(utcDate, \"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n  }\n\n  formatDateFromDb(dateString: string): string {\n    // Get the user's time zone\n    const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    // Convert the UTC date to the user's local date\n    const localDate = utcToZonedTime(new Date(dateString), timeZone);\n\n    // Format the local date including time\n    return format(localDate, 'yyyy-MM-dd HH:mm:ss', {timeZone});\n  }\n\n\n  formatDateToIsoMonthStartEndString(date: Date, dateFn: (date: Date) => Date): string {\n    // Get the user's time zone\n    const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    // Apply the passed function (like startOfMonth or endOfMonth) to the date\n    const adjustedDate = dateFn(date);\n\n    // Format the date as an ISO string including time and time zone\n    return format(adjustedDate, \"yyyy-MM-dd'T'HH:mm:ssXXX\", {timeZone: timeZone});\n  }\n\n  createThreeMonthDateRangeFormattedStr(): { start: string, end: string } {\n    const today = new Date();\n    const threeMonthsAgo = new Date();\n    threeMonthsAgo.setMonth(today.getMonth() - 3);\n\n    return {\n      start: this.formatDateToIsoMonthStartEndString(threeMonthsAgo, startOfMonth),\n      end: this.formatDateToIsoMonthStartEndString(today, endOfMonth)\n    };\n  }\n\n  createThreeMonthDateRange(): { start: Date, end: Date } {\n    const today = new Date();\n    const threeMonthsAgo = new Date();\n    threeMonthsAgo.setMonth(today.getMonth() - 3);\n\n    return {\n      start: threeMonthsAgo,\n      end: today\n    };\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { EmotionData } from '../models/emotion.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmotionCacheService {\n  private emotionCacheSource = new BehaviorSubject<EmotionData | undefined>(undefined);\n  emotionCache$ = this.emotionCacheSource.asObservable();\n\n  constructor() {}\n\n  updateEmotionCache(emotionCache: EmotionData): void {\n    this.emotionCacheSource.next(emotionCache);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { EmotionRecord } from '../models/emotion.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmotionStateService {\n  private _newEmotionSubject = new BehaviorSubject<EmotionRecord | null>(null);\n  newEmotionRecord$: Observable<EmotionRecord | null> = this._newEmotionSubject.asObservable();\n\n  updateNewEmotion(emotion: EmotionRecord): void {\n    this._newEmotionSubject.next(emotion);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {\n  EmotionData, EmotionRecord,\n  EmotionRecordDay, EmotionTypesTriggersDoughnutData, LineChartTrendDataSet,\n  Note, SuggestedAction, SunburstData\n} from '../models/emotion.model';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {AuthService} from './auth.service';\nimport {ErrorService} from \"./error.service\";\nimport {Observable} from \"rxjs\";\nimport {DateService} from \"./date.service\";\nimport {startOfMonth, endOfMonth} from 'date-fns';\nimport {environment} from \"../../environments/environment\";\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmotionService {\n\n  constructor(private http: HttpClient, private authService: AuthService, private errorService: ErrorService,\n              private dateService: DateService) {\n  }\n\n  insertEmotionRecord(emotionRecord: Omit<EmotionRecord, 'id'>) {\n    const headers: HttpHeaders = this.authService.getAuthorizationHeader();\n    headers.set('Content-Type', 'application/json');\n    return this.http\n      .post<EmotionRecord>(`${environment.baseUrl}/emotionRecord`, emotionRecord, {headers})\n      .pipe(catchError(resp => this.errorService.handleError(resp)));\n  }\n\n  addNoteToEmotionRecord(emotionRecordId: number, note: Note) {\n    const headers: HttpHeaders = this.authService.getAuthorizationHeader();\n    headers.set('Content-Type', 'application/json');\n    return this.http\n      .post<EmotionRecord>(`${environment.baseUrl}/emotionRecord/${emotionRecordId}/note`, note, {headers})\n      .pipe(catchError(resp => this.errorService.handleError(resp)));\n  }\n\n  fetchSuggestedActionsForEmotionRecord(emotionRecordId: number) {\n    const headers: HttpHeaders = this.authService.getAuthorizationHeader();\n    return this.http\n      .get<SuggestedAction[]>(`${environment.baseUrl}/emotionRecord/${emotionRecordId}/suggestedActions`, {headers})\n      .pipe(catchError(resp => this.errorService.handleError(resp)));\n  }\n\n\n  getEmotionCache(): Observable<EmotionData> {\n    const headers = this.authService.getAuthorizationHeader();\n    return this.http\n      .get<EmotionData>(`${environment.baseUrl}/emotionCache`, {headers})\n      .pipe(\n        tap((response) => {\n          console.log('getEmotionCache', response);\n        }),\n        catchError(resp => this.errorService.handleError(resp))\n      );\n  }\n\n  fetchEmotionRecordsForCurrentUser(): Observable<EmotionRecord[]> {\n    const headers = this.authService.getAuthorizationHeader();\n    return this.http.get<EmotionRecord[]>(`${environment.baseUrl}/emotionRecord/user`, {headers}).pipe(\n      catchError((error: HttpErrorResponse) => {\n        return this.errorService.handleError(error);\n      })\n    );\n  }\n\n  fetchEmotionRecordDaysForCurrentUser() {\n    const headers = this.authService.getAuthorizationHeader();\n    return this.http.get<any[]>(`${environment.baseUrl}/emotionRecord/user/days`, {headers}).pipe(\n      map(data => {\n        return data.map((recordDay: any) => {\n          return {\n            date: new Date(recordDay.date), // Convert date string to Date object\n            records: recordDay.records, // Assume records are already in the correct format\n          } as EmotionRecordDay;\n        });\n      }),\n      catchError((error: HttpErrorResponse) => {\n        return this.errorService.handleError(error);\n      })\n    );\n  }\n\n  fetchMonthEmotionRecordsForCurrentUser(date: Date) {\n    const headers = this.authService.getAuthorizationHeader();\n    const startOfMonthDateString = this.dateService.formatDateToIsoMonthStartEndString(date, startOfMonth);\n    const endOfMonthDateString = this.dateService.formatDateToIsoMonthStartEndString(date, endOfMonth);\n\n    return this.http.get<EmotionRecord[]>(\n      `${environment.baseUrl}/emotionRecord/user/month/${startOfMonthDateString}/${endOfMonthDateString}`,\n      {headers}).pipe(catchError(resp => this.errorService.handleError(resp)));\n  }\n\n  fetchMonthEmotionRecordsByDayForCurrentUser(dateRange: { start: string, end: string }) {\n    const headers = this.authService.getAuthorizationHeader();\n\n    return this.http.get<LineChartTrendDataSet>(\n      `${environment.baseUrl}/emotionRecord/day/user/month/${dateRange.start}/${dateRange.end}`,\n      {headers}).pipe(catchError(resp => this.errorService.handleError(resp)));\n  }\n\n  fetchEmotionSunburnChartDataForDateRange(dateRange: { start: string, end: string }) {\n    const headers = this.authService.getAuthorizationHeader();\n    return this.http.get<SunburstData[]>(\n      `${environment.baseUrl}/charts/user/month/${dateRange.start}/${dateRange.end}`,\n      {headers}).pipe(catchError(resp => this.errorService.handleError(resp)));\n  }\n\n  fetchEmotionDoughnutEmotionTypeTriggersChartDataForDateRange(dateRange: { start: string, end: string }): Observable<EmotionTypesTriggersDoughnutData> {\n    const headers = this.authService.getAuthorizationHeader();\n    return this.http.get<EmotionTypesTriggersDoughnutData>(\n      `${environment.baseUrl}/charts/user/doughnut/emotionTypesTrigger/month/${dateRange.start}/${dateRange.end}`,\n      {headers}).pipe(catchError(resp => this.errorService.handleError(resp)));\n  }\n\n  deleteTag(tagId: number): Observable<boolean> {\n    const headers = this.authService.getAuthorizationHeader();\n    return this.http.delete<boolean>(environment.baseUrl + '/note/tag/' + tagId, { headers, observe: 'response' }).pipe(\n      map(response => response.status === 200)\n    );\n  }\n\n  addTag(tagName: string, emotionRecordId: number): Observable<boolean> {\n    const headers = this.authService.getAuthorizationHeader();\n    const body = {\n      tagName: tagName,\n      emotionRecordId: emotionRecordId\n    };\n    return this.http.post<boolean>(environment.baseUrl + '/note/tag', body,\n      { headers, observe: 'response' }).pipe(\n      map(response => response.status === 200)\n    )\n  }\n\n  deleteEmotionRecord(record: EmotionRecord) {\n    const headers = this.authService.getAuthorizationHeader();\n    return this.http.delete(`${environment.baseUrl}/emotionRecord/${record.id}`,\n        {headers, observe: 'response' }).\n    pipe(catchError(resp => this.errorService.handleError(resp))).\n    pipe(\n        map(response => response.status === 200)\n    );\n  }\n\n    updateEmotionRecord(emotionRecord: EmotionRecord): Observable<EmotionRecord> {\n      const headers = this.authService.getAuthorizationHeader();\n      headers.set('Content-Type', 'application/json');\n      return this.http.put<EmotionRecord>(`${environment.baseUrl}/emotionRecord`, emotionRecord, {headers}).\n      pipe(catchError(resp => this.errorService.handleError(resp)))\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport {AuthService} from \"./auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  handleError(error: HttpErrorResponse, message?: string) {\n    let errorMessage = 'An error occurred';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.error(error);\n    if (error.status === 401) {\n      this.authService.logout();\n      this.router.navigate(['/login']);\n    }\n    return throwError(() => new Error(message || 'Something went wrong'));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { NoteTodoUpdate } from '../models/emotion.model';\nimport {map} from \"rxjs/operators\";\nimport {AuthService} from \"./auth.service\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoteTodoService {\n\n  constructor(private http: HttpClient, private authService: AuthService,) { }\n\n  updateNoteTodoToAccepted(noteTodoUpdate: NoteTodoUpdate): Observable<boolean> {\n    const headers = this.authService.getAuthorizationHeader();\n    return this.http.put(environment.baseUrl + `/note/todo/accept/${noteTodoUpdate.id}`,\n      { }, {headers, observe: 'response' }).pipe(\n      map(response => response.status === 200)\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {filter, Observable, throwIfEmpty, timer} from 'rxjs';\nimport {\n  EmotionFromNoteResult,\n  EmotionRecord,\n  Note,\n  NoteTemplate\n} from '../models/emotion.model';\nimport {AuthService} from \"./auth.service\";\nimport {environment} from \"../../environments/environment\";\nimport {catchError, map, switchMap, take, tap} from \"rxjs/operators\";\nimport {ErrorService} from \"./error.service\"; // adjust the path as needed\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoteService {\n\n  constructor(private http: HttpClient, private authService: AuthService, private errorService: ErrorService) {}\n\n  getNoteTemplates(): Observable<NoteTemplate[]> {\n    const headers = this.authService.getAuthorizationHeader();\n    return this.http.get<NoteTemplate[]>(environment.baseUrl + '/noteTemplate', { headers });\n  }\n\n  deleteNote(id: number): Observable<boolean> {\n    const headers = this.authService.getAuthorizationHeader();\n    return this.http.put(environment.baseUrl + '/note/delete/' + id, {}, { headers, observe: 'response' })\n      .pipe(\n        map(response => response.status === 200)\n      );\n  }\n\n  undeleteNote(id: number): Observable<boolean> {\n    const headers = this.authService.getAuthorizationHeader();\n    return this.http.put(environment.baseUrl + '/note/undelete/' + id, {}, { headers, observe: 'response' })\n      .pipe(\n        map(response => response.status === 200)\n      );\n  }\n\n  detectEmotion(note: Note): Observable<EmotionFromNoteResult> {\n    console.log('Detecting emotion for text url: ' + `${environment.baseUrl}/note/emotion/detect`);\n    const headers = this.authService.getAuthorizationHeader();\n    return this.handleDetectEmotionWithRetry(note, headers).pipe(\n      map((response: HttpResponse<EmotionRecord>) => {\n        return {emotionRecord: response.body, note: note} as EmotionFromNoteResult;\n      })\n    );\n  }\n\n  private handleDetectEmotionWithRetry(note: Note, headers: HttpHeaders): Observable<HttpResponse<EmotionRecord>> {\n    return timer(0, 3000).pipe(\n      take(20), // limit the number of retries to 20\n      switchMap(() => this.http.post<EmotionRecord>(\n        `${environment.baseUrl}/note/emotion/detect`, note,\n        {headers, observe: 'response'})),\n      tap(response => {\n        if (response.status === 202) {\n          console.log('Emotion detection still in progress, retrying...');\n        } else if (response.status === 200) {\n          console.log('Emotion detection completed');\n        }\n      }),\n      filter(response => response.status === 200),\n      take(1), // stop retrying after the first successful response\n      throwIfEmpty(() => new Error('Exhausted number of retries without success')),\n      catchError(resp => this.errorService.handleError(resp))\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {UserTodo} from '../models/emotion.model';\nimport {AuthService} from \"./auth.service\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserTodoService {\n\n    constructor(private http: HttpClient, private authService: AuthService) {\n    }\n\n    fetchUserTodos(page: number, size: number): Observable<UserTodo[]> {\n        const headers = this.authService.getAuthorizationHeader();\n        return this.http.get<UserTodo[]>(`${environment.baseUrl}/user/todo/${page}/${size}`, {headers});\n    }\n\n    complete(todo: UserTodo) {\n        const headers = this.authService.getAuthorizationHeader();\n        return this.http.put<UserTodo[]>(`${environment.baseUrl}/user/todo/complete/${todo.id}/${todo.isDone}`, {},\n            {headers});\n    }\n\n    archive(todo: UserTodo) {\n        const headers = this.authService.getAuthorizationHeader();\n        return this.http.put<UserTodo[]>(`${environment.baseUrl}/user/todo/archive/${todo.id}/${todo.isArchived}`, {},\n            {headers});\n    }\n\n    add(todo: UserTodo) {\n        const headers = this.authService.getAuthorizationHeader();\n        return this.http.post<UserTodo[]>(`${environment.baseUrl}/user/todo`, todo,\n            {headers});\n    }\n\n    delete(todo: UserTodo) {\n        const headers = this.authService.getAuthorizationHeader();\n        return this.http.delete<UserTodo[]>(`${environment.baseUrl}/user/todo/${todo.id}`,\n            {headers});\n    }\n\n    update(todo: UserTodo) {\n        const headers = this.authService.getAuthorizationHeader();\n        return this.http.put<UserTodo[]>(`${environment.baseUrl}/user/todo`, todo,\n            {headers});\n    }\n}\n","import { Component } from '@angular/core';\nimport { User } from '../models/emotion.model';\nimport { AuthService } from '../services/auth.service';\nimport { switchMap, first } from 'rxjs/operators';\nimport {firstValueFrom} from \"rxjs\";\nimport { Router } from '@angular/router';\nimport {MatSnackBar} from \"@angular/material/snack-bar\"; // Import Router here\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n  username = '';\n  email = '';\n  password = '';\n  firstName = '';\n  lastName = '';\n\n  constructor(private authService: AuthService, private router: Router,\n              private snackBar: MatSnackBar,\n  ) { }\n\n  signup() {\n    const user: User = {\n      username: this.username,\n      email: this.email,\n      password: this.password,\n      firstName: this.firstName,\n      lastName: this.lastName,\n    };\n\n    firstValueFrom(this.authService\n      .signUp(user)\n      .pipe(\n        switchMap(() => this.authService.login(this.username, this.password)),\n        first()\n      ))\n      .then(() => {\n        this.router.navigate(['/']);\n      })\n      .catch((error) => {\n        console.error('Error during signup:', error);\n        // Handle error here, e.g. show an error message\n        this.snackBar.open('Signup failed, try another username.', 'Close', {\n          duration: 5000,\n          panelClass: ['error-snackbar']\n        });\n      });\n  }\n\n}\n","<div class=\"signup-container\">\n  <mat-card class=\"signup-card\">\n    <mat-card-header>\n      <mat-card-title>Sign Up</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <form (ngSubmit)=\"signup()\" #signupForm=\"ngForm\">\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n          <mat-label>Username</mat-label>\n          <input matInput type=\"text\" name=\"username\" required [(ngModel)]=\"username\">\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n          <mat-label>Email</mat-label>\n          <input matInput type=\"email\" name=\"email\" required [(ngModel)]=\"email\">\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n          <mat-label>Password</mat-label>\n          <input matInput type=\"password\" name=\"password\" required [(ngModel)]=\"password\">\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n          <mat-label>First Name</mat-label>\n          <input matInput type=\"text\" name=\"firstName\"  [(ngModel)]=\"firstName\">\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"form-field\">\n          <mat-label>Last Name</mat-label>\n          <input matInput type=\"text\" name=\"lastName\" [(ngModel)]=\"lastName\">\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\" type=\"submit\">Sign Up</button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n  <p>Already have an account? <a routerLink=\"/login\">Log in</a></p>\n</div>\n","import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {UserTodo} from '../models/emotion.model';\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {AddTodoDialogComponent} from \"../add-todo-dialog/add-todo-dialog.component\";\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n    selector: 'app-todo-tab',\n    templateUrl: './todo-tab.component.html',\n    styleUrls: ['./todo-tab.component.css'],\n  animations: [\n    trigger('checkUncheck', [\n      state('checked', style({\n        transform: 'scale(1)',\n        color: 'green'\n      })),\n      state('unchecked', style({\n        transform: 'scale(1)',\n        color: 'black'\n      })),\n      transition('checked <=> unchecked', [\n        animate('0.5s')\n      ])\n    ])\n  ]\n})\nexport class TodoTabComponent {\n    @Input() label!: string;\n    @Input() todos!: UserTodo[];\n    @Output() complete = new EventEmitter<UserTodo>();\n    @Output() archive = new EventEmitter<UserTodo>();\n    @Output() delete = new EventEmitter<UserTodo>();\n    @Output() edit = new EventEmitter<UserTodo>();\n    @Output() moveToTop = new EventEmitter<UserTodo>();\n    @Input() postponeActionTitle!: (isArchived: boolean) => string;\n    @Input() completeActionTitle!: (isDone: boolean) => string;\n\n    constructor(public dialog: MatDialog) {\n    }\n\n    editTodo(todo: UserTodo): void {\n        this.edit.emit(todo);\n    }\n\n    openEditTodoDialog(todoToBeUpdated: UserTodo): void {\n        console.log(\"openEditTodoDialog\", todoToBeUpdated);\n        const dialogRef = this.dialog.open(AddTodoDialogComponent, {\n            width: '45%', height: '45%',\n            data: {todo: todoToBeUpdated}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                console.log(\"openEditTodoDialog result\", result);\n                this.editTodo(result);\n            }\n        });\n    }\n\n  computeIcon(isDone: boolean) {\n    return isDone ? \"cancel_presentation\" : \"check\" ;\n  }\n\n  handleClick(event: Event, emitter: EventEmitter<any>, todo: UserTodo): void {\n    event.stopPropagation();\n    emitter.emit(todo);\n  }\n}\n","<mat-accordion>\n  <mat-expansion-panel *ngFor=\"let todo of todos\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{ todo.title }}\n      </mat-panel-title>\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" (click)=\"$event.stopPropagation()\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <div class=\"checkbox-button-container\">\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item *ngIf=\"label == 'Completed' || label == 'Active'\" (click)=\"handleClick($event, complete, todo)\">\n            <mat-icon>{{computeIcon(todo.isDone)}}</mat-icon>\n            <span>{{completeActionTitle(todo.isDone)}}</span>\n          </button>\n          <button mat-menu-item *ngIf=\"label == 'Active' || label == 'Postponed'\" (click)=\"archive.emit(todo)\">\n            <mat-icon>schedule</mat-icon>\n            <span>{{postponeActionTitle(todo.isArchived)}}</span>\n          </button>\n          <button mat-menu-item (click)=\"delete.emit(todo)\">\n            <mat-icon>delete</mat-icon>\n            <span>Delete</span>\n          </button>\n          <button mat-menu-item *ngIf=\"label == 'Active' || label == 'Postponed'\" (click)=\"openEditTodoDialog(todo)\">\n            <mat-icon>edit</mat-icon>\n            <span>Edit</span>\n          </button>\n          <button mat-menu-item *ngIf=\"label === 'Active' || label === 'Postponed'\" (click)=\"moveToTop.emit(todo)\">\n            <mat-icon>arrow_upward</mat-icon>\n            <span>Move to top</span>\n          </button>\n        </mat-menu>\n        <button mat-icon-button *ngIf=\"label === 'Active' || label === 'Postponed'\" (click)=\"handleClick($event, moveToTop, todo)\">\n          <mat-icon>arrow_upward</mat-icon>\n        </button>\n        <mat-checkbox *ngIf=\"label == 'Completed' || label == 'Active'\" [checked]=\"todo.isDone\"\n                      (click)=\"handleClick($event, complete, todo)\"\n                      [@checkUncheck]=\"todo.isDone ? 'checked' : 'unchecked'\">\n        </mat-checkbox>\n      </div>\n    </mat-expansion-panel-header>\n    <p>{{ todo.description }}</p>\n  </mat-expansion-panel>\n</mat-accordion>\n<div *ngIf=\"todos.length === 0\">\n  <p>No todos found.</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {UserTodo} from '../models/emotion.model';\nimport {UserTodoService} from \"../services/user-todo.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {AddTodoDialogComponent} from \"../add-todo-dialog/add-todo-dialog.component\";\nimport {MatSnackBar, MatSnackBarRef, SimpleSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-user-todos',\n  templateUrl: './user-todos.component.html',\n  styleUrls: ['./user-todos.component.css']\n})\nexport class UserTodosComponent implements OnInit {\n  todos: UserTodo[] = [];\n  page = 0;\n  size = 25;\n  editingTodoId: number | null = null;\n  activeTodos: UserTodo[] = [];\n  completedTodos: UserTodo[] = [];\n  allTodos: UserTodo[] = [];\n  archivedTodos: UserTodo[] = [];\n  isLoading = true;\n  snackBarDuration = 10000;\n\n  snackBarRef: MatSnackBarRef<SimpleSnackBar> | null = null;\n\n\n  constructor(private userTodoService: UserTodoService, public dialog: MatDialog,\n              private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.fetchTodos();\n  }\n\n  fetchTodos(): void {\n    this.userTodoService.fetchUserTodos(this.page, this.size).subscribe(todos => {\n      this.todos = todos;\n      this.refresh();\n      this.isLoading = false;\n    });\n  }\n\n  private refresh() {\n    this.allTodos = this.todos.filter(todo => !todo.isArchived);\n    this.activeTodos = this.allTodos.filter(todo => !todo.isDone);\n    this.archivedTodos = this.todos.filter(todo => todo.isArchived && !todo.isDone);\n    this.completedTodos = this.todos.filter(todo => todo.isDone);\n  }\n\n  complete(todo: UserTodo): void {\n    this.editingTodoId = todo.id!;\n    todo.isDone = !todo.isDone;\n    setTimeout(\n      () => {\n        this.userTodoService.complete(todo).subscribe({\n          next: todos => {\n            this.todos = todos;\n            this.editingTodoId = null;\n            this.refresh();\n            const action = todo.isDone ? 'completed' : 'un-completed';\n            this.snackBar.open(`Todo ${action}: ${todo.title}`, 'Close', {\n              duration: this.snackBarDuration,\n            });\n          },\n          error: err => {\n            const action = todo.isDone ? 'complete' : 'un-complete';\n            this.handleError(err, `Failed to ${action} todo: ${todo.title}`)\n          }\n        });\n      }, 500\n    )\n  }\n\n  archive(todo: UserTodo): void {\n    todo.isArchived = !todo.isArchived;\n    this.userTodoService.archive(todo).subscribe({\n      next: todos => {\n        this.todos = todos;\n        this.editingTodoId = null;\n        this.refresh();\n        const action = todo.isArchived ? 'postponed' : 'activated';\n        this.snackBar.open(`Todo ${action}: ${todo.title}`, 'Close', {\n          duration: this.snackBarDuration,\n        });\n      },\n      error: err => {\n        const action = todo.isDone ? 'archive' : 'activate';\n        this.handleError(err, `Failed to ${action} todo ${todo.title}`)\n      }\n    });\n  }\n\n  delete(todo: UserTodo): void {\n    this.snackBar.open(`Deleting todo: ${todo.title}`, 'Close', {\n      duration: this.snackBarDuration,\n    });\n    todo.isDeleted = true;\n    this.userTodoService.update(todo).subscribe({\n      next: todos => {\n        this.todos = todos;\n        this.refresh();\n        this.snackBarRef = this.snackBar.open(`Todo deleted: ${todo.title}`, 'Undo', {\n          duration: this.snackBarDuration,\n        });\n        this.snackBarRef.onAction().subscribe(() => {\n          todo.isDeleted = false;\n          this.userTodoService.update(todo).subscribe({\n            next: todos => {\n              this.todos = todos;\n              this.refresh();\n            },\n            error: err => this.handleError(err, `Failed to undo delete for todo: ${todo.title}`)\n          });\n        });\n        this.snackBarRef.afterDismissed().subscribe(info => {\n          if (!info.dismissedByAction) {\n            this.userTodoService.delete(todo).subscribe({\n              next: todos => {\n                this.todos = todos;\n                this.refresh();\n              },\n              error: err => this.handleError(err, `Failed to delete todo: ${todo.title}`)\n            });\n          }\n        });\n      },\n      error: err => this.handleError(err, `Failed to delete todo: ${todo.title}`)\n    });\n  }\n\n  update(todo: UserTodo): void {\n    this.userTodoService.update(todo).subscribe({\n      next: todos => {\n        this.todos = todos;\n        this.editingTodoId = null;\n        this.refresh();\n        this.snackBar.open(`Todo updated: ${todo.title}`, 'Close', {\n          duration: this.snackBarDuration,\n        });\n      },\n      error: err => this.handleError(err, `Failed to update todo: ${todo.title}`)\n    });\n  }\n\n  postponeActionTitle(isArchived: boolean): string {\n    return isArchived ? 'Activate' : 'Postpone';\n  }\n\n  completeActionTitle(isDone: boolean): string {\n    return isDone ?  'Un-complete' : 'Mark completed';\n  }\n\n  openAddTodoDialog(): void {\n    const dialogRef = this.dialog.open(AddTodoDialogComponent, {\n      width: '45%', height: '45%'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.createTodo(result);\n      }\n    });\n  }\n\n  createTodo(newTodo: UserTodo) {\n    console.log(\"adding new todo\");\n    this.userTodoService.add(newTodo).subscribe({\n      next: todos => {\n        this.todos = todos;\n        this.refresh();\n        this.snackBar.open(`Todo Added: ${newTodo.title}`, 'Close', {\n          duration: this.snackBarDuration,\n        });\n      },\n      error: err => this.handleError(err, `Failed to add todo: ${newTodo.title}`)\n    })\n  }\n\n  private handleError(err: any, errorMsg = \"Failed to complete action\") {\n    console.error(err);\n    this.snackBar.open(errorMsg, 'Close', {\n      duration: this.snackBarDuration,\n    });\n  }\n\n  moveToTop(todo: UserTodo) {\n    this.userTodoService.update(todo).subscribe({\n      next: todos => {\n        this.todos = todos;\n        this.refresh();\n        this.snackBar.open(`Todo moved to top: ${todo.title}`, 'Close', {\n          duration: this.snackBarDuration,\n        });\n      },\n      error: err => this.handleError(err, `Failed to move todo to top: ${todo.title}`)\n    });\n  }\n}\n\n\n\n","<div *ngIf=\"isLoading\" class=\"page-loading\">\n    <mat-spinner diameter=48></mat-spinner>\n    <h2>Loading...</h2>\n</div>\n<button mat-raised-button type=\"button\" color=\"primary\" (click)=\"openAddTodoDialog()\">\n    Add New Todo\n</button>\n<mat-tab-group>\n    <mat-tab label=\"Active ({{activeTodos.length}})\">\n        <app-todo-tab [label]=\"'Active'\" [todos]=\"activeTodos\" (complete)=\"complete($event)\" (archive)=\"archive($event)\"\n                      (delete)=\"delete($event)\" (edit)=\"update($event)\"\n                      [postponeActionTitle]=\"postponeActionTitle\" [completeActionTitle]=\"completeActionTitle\"\n                      (moveToTop)=\"moveToTop($event)\"\n        ></app-todo-tab>\n    </mat-tab>\n    <mat-tab label=\"Completed ({{completedTodos.length}})\">\n        <app-todo-tab [label]=\"'Completed'\" [todos]=\"completedTodos\" (complete)=\"complete($event)\"\n                      (archive)=\"archive($event)\" (delete)=\"delete($event)\" (edit)=\"update($event)\"\n                      [postponeActionTitle]=\"postponeActionTitle\" [completeActionTitle]=\"completeActionTitle\"\n                      (moveToTop)=\"moveToTop($event)\"\n        >\n\n        </app-todo-tab>\n    </mat-tab>\n    <mat-tab label=\"Postponed ({{archivedTodos.length}})\">\n        <app-todo-tab [label]=\"'Postponed'\" [todos]=\"archivedTodos\" (complete)=\"complete($event)\"\n                      (delete)=\"delete($event)\" (edit)=\"update($event)\"\n                      (archive)=\"archive($event)\" [postponeActionTitle]=\"postponeActionTitle\"\n                      [completeActionTitle]=\"completeActionTitle\"\n                      (moveToTop)=\"moveToTop($event)\"\n        >\n\n        </app-todo-tab>\n    </mat-tab>\n</mat-tab-group>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:4200/api'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["DateAdapter","format","getDay","getDate","getDaysInMonth","getMonth","getYear","isValid","isDate","addYears","addMonths","addDays","parseISO","MAT_DATE_LOCALE","DateFnsAdapter","constructor","matDateLocale","setLocale","date","getDayOfWeek","getMonthNames","style","getDateNames","Array","from","length","_","i","String","getDayOfWeekNames","getYearName","toString","getFirstDayOfWeek","getNumDaysInMonth","clone","Date","getTime","createDate","year","month","today","parse","value","parseFormat","displayFormat","addCalendarYears","years","addCalendarMonths","months","addCalendarDays","days","toIso8601","toISOString","isDateInstance","obj","invalid","NaN","i0","ɵɵinject","factory","ɵfac","MAT_DIALOG_DATA","FormControl","FormGroup","Validators","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AddTodoDialogComponent","dialogRef","data","isNewTodo","todo","isAi","isDeleted","isRead","title","description","isDone","isArchived","todoForm","required","ngOnInit","setValue","onSave","close","onCancel","ɵɵdirectiveInject","i1","MatDialogRef","selectors","decls","vars","consts","template","AddTodoDialogComponent_Template","rf","ctx","ɵɵlistener","AddTodoDialogComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","AddTodoDialogComponent_mat_error_8_Template","AddTodoDialogComponent_Template_button_click_15_listener","$event","preventDefault","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","controls","touched","RouterModule","MainLayoutComponent","LandingPageComponent","LoginComponent","SignupComponent","CreateEmotionComponent","EmotionsTimelineComponent","DashboardComponent","AuthGuard","DisplayEmotionComponent","MatListModule","EmotionCalendarComponent","UserTodosComponent","routes","path","redirectTo","pathMatch","component","children","canActivate","AppRoutingModule","forRoot","imports","exports","AppComponent","AppComponent_Template","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","MatToolbarModule","MatCardModule","MatButtonModule","MatInputModule","MatIconModule","NavigationComponent","MatSidenavModule","MatSelectModule","MatSliderModule","MatSnackBarModule","MatChipsModule","MatProgressSpinnerModule","MatTableModule","MatPaginatorModule","MatSortModule","ScreenSizeDirective","LayoutModule","MatDatepickerModule","MAT_DATE_FORMATS","DayComponent","MatGridListModule","MatTooltipModule","MatTabsModule","NgxChartsModule","CustomDatePickerComponent","MatSlideToggleModule","MatAutocompleteModule","MatExpansionModule","MatProgressBarModule","CanvasJSAngularChartsModule","MatRadioModule","DayInfoDialogComponent","MatDialogModule","NoteTodoComponent","MatCheckboxModule","MatMenuModule","TodoTabComponent","FlexModule","NoteFormComponent","EmotionAnalyzerComponent","MAT_DATE_FNS_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","AppModule","bootstrap","provide","useClass","deps","useValue","declarations","ɵɵelementContainerStart","CreateEmotionComponent_ng_container_1_Template_form_ngSubmit_2_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵelementContainerEnd","ctx_r1","emotionForm","fb","emotionService","authService","emotionStateService","router","snackBar","emotionCacheService","noteService","dateService","isLoadingEmotionCache","sliderColor","noteText","step","maxNoteLength","isDetectingEmotionWithAI","isSavingEmotionRecord","emotionTypes","placeHolderText","group","emotionType","intensity","emotion","trigger","subEmotion","emotionDate","isPublic","emotionNote","tags","todos","textTitle","suggestion","emotionTime","ngOnDestroy","emotionTypesSubscription","unsubscribe","emotionSelectSubscription","subEmotionSelectSubscription","triggerSubscription","ngAfterViewInit","emotionCache$","subscribe","cachedEmotionData","emotionCache","updateEmotionCache","getEmotionCache","next","error","console","open","complete","log","_this","_asyncToGenerator","valid","emotionFromData","emotionRecord","convertEmotionFromDataToEmotionRecord","JSON","stringify","insertEmotionRecord","response","updateNewEmotion","navigate","duration","panelClass","decodedToken","fetchDecodedToken","id","subEmotions","subEmotionId","push","triggers","triggerId","notes","note","text","forEach","tag","userId","created","formatDateToIsoString","FormBuilder","i2","EmotionService","i3","AuthService","i4","EmotionStateService","i5","Router","i6","MatSnackBar","i7","EmotionCacheService","i8","NoteService","i9","DateService","viewQuery","CreateEmotionComponent_Query","CreateEmotionComponent_Template","CreateEmotionComponent_div_0_Template","CreateEmotionComponent_ng_container_1_Template","forwardRef","NG_VALUE_ACCESSOR","NativeDateAdapter","CustomDateAdapter","t","MY_DATE_FORMATS","weekday","placeholder","control","onChange","onTouched","valueChanges","writeValue","emitEvent","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disable","enable","inputs","features","ɵɵProvidersFeature","useExisting","multi","CustomDatePickerComponent_Template","_r0","Breakpoints","doughnutEmotionTypeRecordCountChartOptions","ɵɵpureFunction0","_c0","ctx_r3","doughnutEmotionTypeIntensityChartOptions","ctx_r4","doughnutTriggersRecordCountChartOptions","ctx_r5","doughnutTriggersIntensityChartOptions","ctx_r6","lineChartEmotionTypeCountOptions","ctx_r7","lineChartEmotionTypeIntensityOptions","ctx_r8","lineChartTriggerCountOptions","ctx_r9","lineChartTriggerIntensityOptions","DashboardComponent_ng_container_40_canvasjs_chart_2_Template","DashboardComponent_ng_container_40_canvasjs_chart_3_Template","DashboardComponent_ng_container_40_canvasjs_chart_4_Template","DashboardComponent_ng_container_40_canvasjs_chart_5_Template","DashboardComponent_ng_container_40_canvasjs_chart_6_Template","DashboardComponent_ng_container_40_canvasjs_chart_7_Template","DashboardComponent_ng_container_40_canvasjs_chart_8_Template","DashboardComponent_ng_container_40_canvasjs_chart_9_Template","seriesType","chartType","plotType","breakpointObserver","isLoading","activeTab","startDate","endDate","startDateControl","endDateControl","seriesName","observe","Handset","result","isMobile","matches","initDateRange","subscribeToDateChanges","fetchChartData","dateRange","createThreeMonthDateRange","start","end","dateRangeStr","getEmotionTypeTriggersChartData","getEmotionTypeTriggersTrendsChartData","fetchEmotionDoughnutEmotionTypeTriggersChartDataForDateRange","handleEmotionTypeChartData","handleEmotionTriggerChartData","handleError","fetchMonthEmotionRecordsByDayForCurrentUser","handleEmotionTypeTrendChartData","handleEmotionTriggerTrendChartData","createDoughnutChartOptions","dataProperty","animationEnabled","fontWeight","type","yValueFormatString","indexLabel","dataPoints","map","dp","y","name","color","createLineChartOptions","triggerTypes","objectTypes","axisYTitle","mapDataPoints","mapType","dataset","emotionTypeAccumulated","triggersAccumulated","yValue","x","theme","axisX","valueFormatString","intervalType","interval","axisY","toolTip","shared","legend","cursor","itemclick","e","dataSeries","visible","chart","render","showInLegend","colors","rows","message","setActiveTab","index","onToggleSeriesType","BreakpointObserver","DashboardComponent_Template","DashboardComponent_Template_button_click_12_listener","DashboardComponent_Template_mat_radio_group_ngModelChange_22_listener","DashboardComponent_Template_mat_radio_group_change_22_listener","DashboardComponent_Template_mat_radio_group_ngModelChange_27_listener","DashboardComponent_Template_mat_radio_group_ngModelChange_32_listener","DashboardComponent_Template_mat_tab_group_selectedIndexChange_37_listener","DashboardComponent_div_39_Template","DashboardComponent_ng_container_40_Template","ɵɵpureFunction2","_c1","MatTableDataSource","ɵɵpipeBind2","record_r14","record_r15","record_r16","associatedEmotion","record_r17","record_r18","record_r19","ɵɵpureFunction1","record_r20","colorService","displayedColumns","dataArr","day","records","record","recordInfo","subEmotionName","emotionName","triggerName","getColorForEmotionType","moreThanFiveRecords","closeDialog","ColorService","DayInfoDialogComponent_Template","DayInfoDialogComponent_Template_button_click_1_listener","DayInfoDialogComponent_th_7_Template","DayInfoDialogComponent_td_8_Template","DayInfoDialogComponent_th_10_Template","DayInfoDialogComponent_td_11_Template","DayInfoDialogComponent_th_13_Template","DayInfoDialogComponent_td_14_Template","DayInfoDialogComponent_th_16_Template","DayInfoDialogComponent_td_17_Template","DayInfoDialogComponent_th_19_Template","DayInfoDialogComponent_td_20_Template","DayInfoDialogComponent_th_22_Template","DayInfoDialogComponent_td_23_Template","DayInfoDialogComponent_tr_24_Template","DayInfoDialogComponent_tr_25_Template","ctx_r0","getAverageIntensity","dialog","showDayInfo","hasBackdrop","disableClose","getColor","dayColor","averageIntensity","toFixed","onMouseLeave","clearTimeout","hoverTimeout","MatDialog","DayComponent_Template","DayComponent_Template_div_mousedown_0_listener","DayComponent_Template_div_mouseleave_0_listener","DayComponent_div_1_Template","DayComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","DayComponent_div_4_Template","DayComponent_ng_template_5_Template","ɵɵstyleProp","_r1","_r4","el","largeScreenMode","smallScreenMode","screenSizeSubscription","Small","HandsetPortrait","nativeElement","mode","ElementRef","ɵɵtextInterpolate1","ɵɵtextInterpolate2","tag_r9","tagName","last_r10","DisplayEmotionComponent_ng_container_1_div_18_span_3_Template","DisplayEmotionComponent_ng_container_1_mat_form_field_23_mat_chip_row_5_Template_mat_chip_row_removed_0_listener","restoredCtx","_r15","tag_r13","$implicit","ctx_r14","deleteTag","ɵɵattribute","DisplayEmotionComponent_ng_container_1_mat_form_field_23_mat_chip_row_5_Template","DisplayEmotionComponent_ng_container_1_mat_form_field_23_Template_input_matChipInputTokenEnd_6_listener","_r17","ctx_r16","addTag","_r11","separatorKeysCodes","addOnBlur","noteElem_r19","todo_r27","DisplayEmotionComponent_ng_container_1_div_24_div_3_mat_expansion_panel_17_app_note_todo_6_Template","DisplayEmotionComponent_ng_container_1_div_24_div_3_Template_button_click_10_listener","_r30","ctx_r29","openAnalyzeManuallyDialog","DisplayEmotionComponent_ng_container_1_div_24_div_3_Template_button_click_12_listener","ctx_r31","detectEmotions","DisplayEmotionComponent_ng_container_1_div_24_div_3_div_14_Template","DisplayEmotionComponent_ng_container_1_div_24_div_3_mat_expansion_panel_15_Template","DisplayEmotionComponent_ng_container_1_div_24_div_3_mat_expansion_panel_16_Template","DisplayEmotionComponent_ng_container_1_div_24_div_3_mat_expansion_panel_17_Template","ctx_r18","DisplayEmotionComponent_ng_container_1_div_24_div_3_Template","DisplayEmotionComponent_ng_container_1_div_11_Template","DisplayEmotionComponent_ng_container_1_div_16_Template","DisplayEmotionComponent_ng_container_1_div_17_Template","DisplayEmotionComponent_ng_container_1_div_18_Template","DisplayEmotionComponent_ng_container_1_mat_form_field_23_Template","DisplayEmotionComponent_ng_container_1_div_24_Template","formatDateFromDb","noteTemplates","isLoadingNotes","isLoadingActions","suggestedActions","width","height","afterClosed","alert","newEmotionRecord$","newEmotion","then","tagId","filter","event","trim","isAdded","chipInput","clear","emotionRecordId","detectEmotion","DisplayEmotionComponent_Template","DisplayEmotionComponent_div_0_Template","DisplayEmotionComponent_ng_container_1_Template","of","switchMap","emotionType_r5","emotionWithSubEmotion_r7","subEmotion_r9","trigger_r11","subscriptions","createFromNote","emotionTypes$","getEmotionTypes","mainEmotions$","getMainEmotions","subEmotions$","getSubEmotions","triggers$","getTriggers","emotionCacheSubscription","afterOpenedSubscription","afterOpened","populateEmotionAnalyzeDialog","setFormControlValueForObservable","parentEmotionId","copyFromInputEmotionRecordToForm","inputEmotionRecord","updateEmotionRecordSubscription","updateEmotionRecord","items","controlName","keyExtractor","keyToCompare","itemToSelect","find","item","subscription","existingDetectionResult","emotionDetection","mainEmotionId","setSelectOptionsForEditAccordingToExistingValues","reset","emotionFromResult","emotionTypeOptions","changes","options","option","Promise","resolve","select","warn","emotionOptions","subEmotionOptions","triggerOptions","pipe","emotionTypeObject","get","selectedEmotionType","emotions","selectedEmotion","EmotionAnalyzerComponent_Query","EmotionAnalyzerComponent_Template_form_ngSubmit_1_listener","EmotionAnalyzerComponent_mat_option_11_Template","EmotionAnalyzerComponent_mat_option_22_Template","EmotionAnalyzerComponent_mat_option_28_Template","EmotionAnalyzerComponent_mat_option_34_Template","EmotionAnalyzerComponent_mat_spinner_39_Template","EmotionAnalyzerComponent_Template_button_click_42_listener","ɵɵpipeBind1","getSliderColorThemePalette","tmp_2_0","undefined","isSameDay","setMonth","setYear","day_r4","day_r7","EmotionCalendarComponent_ng_container_15_mat_grid_tile_1_Template","week_r5","emotionRecordService","isLoadingRecords","calendarWeeks","fetchRecords","fetchMonthEmotionRecordsForCurrentUser","monthRecords","buildCalendar","err","monthSelected","firstDayOfMonth","lastDayOfMonth","weeks","week","dayRecord","findDayRecord","dayRecords","currentDay","emotionSums","calculateIntensityPerEmotion","averageIntensitiesPerType","calculateAverageIntensityPerEmotion","reduce","sum","sortedEmotionSums","sortEmotionsSums","dateTime","count","Object","entries","sort","a","b","chosenYearHandler","normalizedYear","chosenMonthHandler","normalizedMonth","datepicker","EmotionCalendarComponent_Template","EmotionCalendarComponent_div_0_Template","EmotionCalendarComponent_Template_input_dateChange_4_listener","EmotionCalendarComponent_Template_mat_datepicker_yearSelected_6_listener","EmotionCalendarComponent_Template_mat_datepicker_monthSelected_6_listener","_r8","ɵɵreference","EmotionCalendarComponent_div_14_Template","EmotionCalendarComponent_ng_container_15_Template","MatPaginator","MatSort","record_r13","EmotionsTimelineComponent_td_16_Template_button_click_1_listener","stopPropagation","EmotionsTimelineComponent_td_16_Template_button_click_6_listener","_r21","ctx_r20","onDelete","_r18","EmotionsTimelineComponent_tr_18_Template_tr_click_0_listener","_r24","row_r22","ctx_r23","onRowClicked","EmotionsTimelineComponent_tr_18_Template_tr_mouseover_0_listener","hover","EmotionsTimelineComponent_tr_18_Template_tr_mouseleave_0_listener","changeDetector","snackBarRef","snackBarDuration","dataSource","fetchEmotionRecordsForCurrentUser","paginator","active","direction","sortingDataAccessor","sortHeaderId","getDateForSorting","detectChanges","refresh","refreshedEmotionRecords$","onAction","afterDismissed","info","dismissedByAction","deleteEmotionRecord","s","ChangeDetectorRef","EmotionsTimelineComponent_Query","EmotionsTimelineComponent_div_0_Template","EmotionsTimelineComponent_th_3_Template","EmotionsTimelineComponent_td_4_Template","EmotionsTimelineComponent_th_6_Template","EmotionsTimelineComponent_td_7_Template","EmotionsTimelineComponent_th_9_Template","EmotionsTimelineComponent_td_10_Template","EmotionsTimelineComponent_th_12_Template","EmotionsTimelineComponent_td_13_Template","EmotionsTimelineComponent_th_15_Template","EmotionsTimelineComponent_td_16_Template","EmotionsTimelineComponent_tr_17_Template","EmotionsTimelineComponent_tr_18_Template","changeTitle","LandingPageComponent_Template","lastValueFrom","loginForm","username","password","login","localStorage","setItem","token","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_6_listener","MainLayoutComponent_mat_toolbar_0_button_3_Template_button_click_0_listener","_r9","sidenav","toggle","MainLayoutComponent_mat_toolbar_0_button_13_Template_button_click_0_listener","ctx_r10","logout","MainLayoutComponent_mat_toolbar_0_button_3_Template","MainLayoutComponent_mat_toolbar_0_div_9_Template","MainLayoutComponent_mat_toolbar_0_span_11_Template","MainLayoutComponent_mat_toolbar_0_button_13_Template","isAuthenticated","renderer","cdRef","lastScrollTop","isHeaderVisible","currentUserName","window","addEventListener","handleScroll","bind","hideHeaderOnScroll","resizeSubscription","state","footer","setStyle","_elementRef","header","currentScrollTop","scrollY","document","documentElement","scrollTop","r","Renderer2","MainLayoutComponent_Query","MainLayoutComponent_mat_toolbar_0_Template","MainLayoutComponent_mat_sidenav_2_Template","NavigationComponent_Template","computeNoteLength","NoteFormComponent_Template","NoteFormComponent_Template_form_ngSubmit_1_listener","NoteFormComponent_mat_spinner_14_Template","catchError","NoteTodoComponent_div_1_ng_template_10_Template_button_click_0_listener","_r6","acceptTodo","NoteTodoComponent_div_1_ng_template_10_mat_spinner_2_Template","isSavingStatus","NoteTodoComponent_div_1_p_9_Template","NoteTodoComponent_div_1_ng_template_10_Template","noteTodo","isAccepted","_r2","noteTodoService","updateNoteTodoToAccepted","success","NoteTodoService","NoteTodoComponent_Template","NoteTodoComponent_div_1_Template","take","route","url","providedIn","HttpHeaders","tap","BehaviorSubject","throwError","JwtHelperService","environment","v4","uuidv4","http","isAuthenticatedSubject","asObservable","jwtHelper","currentUsername","getItem","signUp","user","post","baseUrl","decodeToken","removeItem","Error","headers","getAuthorizationHeader","Authorization","encodedToken","HttpClient","hasRecords","primaryColor","accentColor","warnColor","greyColor","zonedTimeToUtc","utcToZonedTime","endOfMonth","startOfMonth","timeZone","Intl","DateTimeFormat","resolvedOptions","utcDate","dateString","localDate","formatDateToIsoMonthStartEndString","dateFn","adjustedDate","createThreeMonthDateRangeFormattedStr","threeMonthsAgo","emotionCacheSource","_newEmotionSubject","errorService","set","resp","addNoteToEmotionRecord","fetchSuggestedActionsForEmotionRecord","fetchEmotionRecordDaysForCurrentUser","recordDay","startOfMonthDateString","endOfMonthDateString","fetchEmotionSunburnChartDataForDateRange","delete","status","body","put","ErrorService","errorMessage","ErrorEvent","noteTodoUpdate","throwIfEmpty","timer","getNoteTemplates","deleteNote","undeleteNote","handleDetectEmotionWithRetry","UserTodoService","fetchUserTodos","page","size","archive","add","update","first","firstValueFrom","email","firstName","lastName","signup","catch","SignupComponent_Template","SignupComponent_Template_form_ngSubmit_6_listener","SignupComponent_Template_input_ngModelChange_11_listener","SignupComponent_Template_input_ngModelChange_15_listener","SignupComponent_Template_input_ngModelChange_19_listener","SignupComponent_Template_input_ngModelChange_23_listener","SignupComponent_Template_input_ngModelChange_27_listener","EventEmitter","animate","transition","TodoTabComponent_mat_expansion_panel_1_button_10_Template_button_click_0_listener","todo_r2","handleClick","computeIcon","completeActionTitle","TodoTabComponent_mat_expansion_panel_1_button_11_Template_button_click_0_listener","_r16","emit","postponeActionTitle","TodoTabComponent_mat_expansion_panel_1_button_17_Template_button_click_0_listener","_r20","openEditTodoDialog","TodoTabComponent_mat_expansion_panel_1_button_18_Template_button_click_0_listener","_r23","ctx_r21","moveToTop","TodoTabComponent_mat_expansion_panel_1_button_19_Template_button_click_0_listener","_r25","ctx_r24","TodoTabComponent_mat_expansion_panel_1_mat_checkbox_20_Template_mat_checkbox_click_0_listener","_r28","ctx_r27","TodoTabComponent_mat_expansion_panel_1_Template_button_click_4_listener","TodoTabComponent_mat_expansion_panel_1_button_10_Template","TodoTabComponent_mat_expansion_panel_1_button_11_Template","TodoTabComponent_mat_expansion_panel_1_Template_button_click_12_listener","_r33","ctx_r32","TodoTabComponent_mat_expansion_panel_1_button_17_Template","TodoTabComponent_mat_expansion_panel_1_button_18_Template","TodoTabComponent_mat_expansion_panel_1_button_19_Template","TodoTabComponent_mat_expansion_panel_1_mat_checkbox_20_Template","label","edit","editTodo","todoToBeUpdated","emitter","outputs","TodoTabComponent_Template","TodoTabComponent_mat_expansion_panel_1_Template","TodoTabComponent_div_2_Template","transform","userTodoService","editingTodoId","activeTodos","completedTodos","allTodos","archivedTodos","fetchTodos","setTimeout","action","openAddTodoDialog","createTodo","newTodo","errorMsg","UserTodosComponent_Template","UserTodosComponent_div_0_Template","UserTodosComponent_Template_button_click_1_listener","UserTodosComponent_Template_app_todo_tab_complete_5_listener","UserTodosComponent_Template_app_todo_tab_archive_5_listener","UserTodosComponent_Template_app_todo_tab_delete_5_listener","UserTodosComponent_Template_app_todo_tab_edit_5_listener","UserTodosComponent_Template_app_todo_tab_moveToTop_5_listener","UserTodosComponent_Template_app_todo_tab_complete_7_listener","UserTodosComponent_Template_app_todo_tab_archive_7_listener","UserTodosComponent_Template_app_todo_tab_delete_7_listener","UserTodosComponent_Template_app_todo_tab_edit_7_listener","UserTodosComponent_Template_app_todo_tab_moveToTop_7_listener","UserTodosComponent_Template_app_todo_tab_complete_9_listener","UserTodosComponent_Template_app_todo_tab_delete_9_listener","UserTodosComponent_Template_app_todo_tab_edit_9_listener","UserTodosComponent_Template_app_todo_tab_archive_9_listener","UserTodosComponent_Template_app_todo_tab_moveToTop_9_listener","ɵɵpropertyInterpolate1","production","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}